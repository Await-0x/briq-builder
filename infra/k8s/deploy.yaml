#@ load("@ytt:template", "template")
#@ load("@ytt:data", "data")
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: #@ data.values.name
  labels: #@ data.values.defaultLabels
spec:
  replicas: 1
  selector:
    matchLabels:
      deployname: #@ data.values.name
  template:
    metadata:
      labels:
        _: #@ template.replace(data.values.defaultLabels)
        deployname: #@ data.values.name
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            preference:
              matchExpressions:
              - key: node_type
#@ if data.values.env == 'prod':
                operator: NotIn
#@ else:
                operator: In
#@ end
                values:
                - release_surge
      containers:
      - name: #@ data.values.name
        image: #@ "europe-west3-docker.pkg.dev/healthy-saga-329513/sltech-briq/" + data.values.image_name + ":" + data.values.image_tag
        ports:
        - containerPort: 80
        volumeMounts:
        - name: password
          mountPath: "/etc/nginx/secrets/"
        - name: nginx-conf
          mountPath: /etc/nginx/briq
        resources:
          requests:
            cpu: #@ data.values.resources.nginx.cpu
            memory: #@ data.values.resources.nginx.memory 
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 10
          failureThreshold: 2
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 10
          failureThreshold: 2
      - name: #@ data.values.name + "-node"
        image: #@ "europe-west3-docker.pkg.dev/healthy-saga-329513/sltech-briq/" + data.values.image_name + "-node:" + data.values.image_tag
        ports:
        - containerPort: 5000
        resources:
          requests:
            cpu: #@ data.values.resources.node.cpu
            memory: #@ data.values.resources.node.memory
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 10
          failureThreshold: 2
        livenessProbe:
          httpGet:
            path: /health
            port: 5000
          initialDelaySeconds: 5
          periodSeconds: 10
          failureThreshold: 2
      volumes:
      - name: password
        secret:
          secretName: adminpassword
      - name: nginx-conf
        configMap:
          name: #@ data.values.name + "-nginx-conf"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: #@ data.values.name + "-nginx-conf"
  labels: #@ data.values.defaultLabels
data:
#@ if data.values.useSecurity:
  security.conf: |
    auth_basic "admin protection";
    auth_basic_user_file /etc/nginx/secrets/password;
#@ else:
  security.conf: |
    auth_basic off;
#@ end
#@ if data.values.env == 'prod':
  api_relay.conf: |
    location /api_relay/ {
        auth_basic "admin protection";
        auth_basic_user_file /etc/nginx/secrets/password;

        proxy_set_header   X-Forwarded-For $remote_addr;
        proxy_set_header   Host $http_host;
        proxy_pass         http://briq-api.default.svc.cluster.local/;
    }
#@ else:
  api_relay.conf: |
    location /api_relay/ {
        auth_basic "admin protection";
        auth_basic_user_file /etc/nginx/secrets/password;

        proxy_set_header   X-Forwarded-For $remote_addr;
        proxy_set_header   Host $http_host;
        proxy_pass         http://dev-briq-api.default.svc.cluster.local/;
    }
#@ end

#@ if data.values.env == 'prod':
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: #@ data.values.name
  labels: #@ data.values.defaultLabels
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: #@ data.values.name
  minReplicas: 1
  maxReplicas: 8
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 30
      policies:
      - type: Pods
        value: 1
        periodSeconds: 30
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 50
#@ end