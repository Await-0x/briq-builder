# Server configuration, frontend for gunicorn app.
upstream app_server {
    # fail_timeout=0 means we always retry an upstream even if it failed
    # to return a good HTTP response

    # for UNIX domain socket setups
    # server unix:/tmp/gunicorn.sock fail_timeout=0;

    # for a TCP configuration
    server 0.0.0.0:5000 fail_timeout=60;
}

#server {
#    # if no Host match, close the connection to prevent host spoofing
#    # Not needed on k8s
#    listen 80 default_server;
#    return 444;
#}

server {
    listen 8080;

    location = /health {
        add_header Content-Type text/plain;
        return 200 'ok';
    }
}

server {
    #server_name sltech.company www.sltech.company;

    listen 80;

    keepalive_timeout 5;
    client_max_body_size 4G;

    # path for static files
    root /var/www/sltech/;

    location / {
        # checks for static file, if not found proxy to app
        try_files $uri @proxy_to_app;
    }

    # Redirect root to index.html
    location = / {
        try_files /index.html =404;
    }

    location /assets/ {
        access_log off;
        gzip_static on;
        gzip_comp_level 5;
        expires 7d;
        add_header Cache-Control public;
    }

    location @proxy_to_app {
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Host $http_host;
        # we don't want nginx trying to do something clever with
        # redirects, we set the Host: header above already.a
        proxy_redirect off;
        proxy_pass http://app_server;
    }

    #error_page 500 502 503 504 /500.html;
    #location = /500.html {
    #  root /path/to/app/current/public;
    #}
}
