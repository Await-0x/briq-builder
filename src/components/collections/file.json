{
    "abi": [
        {
            "name": "ShapeItem",
            "type": "struct",
            "members": [
                {
                    "name": "color_nft_material",
                    "type": "felt",
                    "offset": 0
                },
                {
                    "name": "x_y_z",
                    "type": "felt",
                    "offset": 1
                }
            ],
            "size": 2
        },
        {
            "name": "UncompressedShapeItem",
            "type": "struct",
            "members": [
                {
                    "name": "material",
                    "type": "felt",
                    "offset": 0
                },
                {
                    "name": "color",
                    "type": "felt",
                    "offset": 1
                },
                {
                    "name": "x",
                    "type": "felt",
                    "offset": 2
                },
                {
                    "name": "y",
                    "type": "felt",
                    "offset": 3
                },
                {
                    "name": "z",
                    "type": "felt",
                    "offset": 4
                },
                {
                    "name": "nft_token_id",
                    "type": "felt",
                    "offset": 5
                }
            ],
            "size": 6
        },
        {
            "name": "FTSpec",
            "type": "struct",
            "members": [
                {
                    "name": "token_id",
                    "type": "felt",
                    "offset": 0
                },
                {
                    "name": "qty",
                    "type": "felt",
                    "offset": 1
                }
            ],
            "size": 2
        },
        {
            "name": "_check_properly_sorted",
            "type": "function",
            "inputs": [
                {
                    "name": "shape_len",
                    "type": "felt"
                },
                {
                    "name": "shape",
                    "type": "ShapeItem*"
                }
            ],
            "outputs": [],
            "stateMutability": "view"
        },
        {
            "name": "_check_for_duplicates",
            "type": "function",
            "inputs": [
                {
                    "name": "shape_len",
                    "type": "felt"
                },
                {
                    "name": "shape",
                    "type": "ShapeItem*"
                },
                {
                    "name": "nfts_len",
                    "type": "felt"
                },
                {
                    "name": "nfts",
                    "type": "felt*"
                }
            ],
            "outputs": [],
            "stateMutability": "view"
        },
        {
            "name": "_check_nfts_ok",
            "type": "function",
            "inputs": [
                {
                    "name": "shape_len",
                    "type": "felt"
                },
                {
                    "name": "shape",
                    "type": "ShapeItem*"
                },
                {
                    "name": "nfts_len",
                    "type": "felt"
                },
                {
                    "name": "nfts",
                    "type": "felt*"
                }
            ],
            "outputs": [],
            "stateMutability": "view"
        },
        {
            "name": "constructor",
            "type": "constructor",
            "inputs": [],
            "outputs": []
        },
        {
            "name": "get_local_index_",
            "type": "function",
            "inputs": [
                {
                    "name": "global_index",
                    "type": "felt"
                }
            ],
            "outputs": [
                {
                    "name": "res",
                    "type": "felt"
                }
            ],
            "stateMutability": "view"
        },
        {
            "name": "shape_",
            "type": "function",
            "inputs": [
                {
                    "name": "global_index",
                    "type": "felt"
                }
            ],
            "outputs": [
                {
                    "name": "shape_len",
                    "type": "felt"
                },
                {
                    "name": "shape",
                    "type": "ShapeItem*"
                },
                {
                    "name": "nfts_len",
                    "type": "felt"
                },
                {
                    "name": "nfts",
                    "type": "felt*"
                }
            ],
            "stateMutability": "view"
        },
        {
            "name": "decompress_data",
            "type": "function",
            "inputs": [
                {
                    "name": "data",
                    "type": "ShapeItem"
                },
                {
                    "name": "local_index",
                    "type": "felt"
                }
            ],
            "outputs": [
                {
                    "name": "data",
                    "type": "UncompressedShapeItem"
                }
            ],
            "stateMutability": "view"
        },
        {
            "name": "check_shape_numbers_",
            "type": "function",
            "inputs": [
                {
                    "name": "global_index",
                    "type": "felt"
                },
                {
                    "name": "shape_len",
                    "type": "felt"
                },
                {
                    "name": "shape",
                    "type": "ShapeItem*"
                },
                {
                    "name": "fts_len",
                    "type": "felt"
                },
                {
                    "name": "fts",
                    "type": "FTSpec*"
                },
                {
                    "name": "nfts_len",
                    "type": "felt"
                },
                {
                    "name": "nfts",
                    "type": "felt*"
                }
            ],
            "outputs": [],
            "stateMutability": "view"
        }
    ],
    "program": {
        "reference_manager": {
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 1,
                        "offset": 0
                    },
                    "value": "[cast(fp + (-3), felt*)]",
                    "pc": 3
                },
                {
                    "ap_tracking_data": {
                        "group": 1,
                        "offset": 3
                    },
                    "value": "[cast(ap, felt*)]",
                    "pc": 10
                },
                {
                    "ap_tracking_data": {
                        "group": 3,
                        "offset": 0
                    },
                    "value": "[cast(fp + (-3), felt*)]",
                    "pc": 19
                },
                {
                    "ap_tracking_data": {
                        "group": 4,
                        "offset": 0
                    },
                    "value": "[cast(fp + (-4), felt*)]",
                    "pc": 24
                },
                {
                    "ap_tracking_data": {
                        "group": 4,
                        "offset": 0
                    },
                    "value": "[cast(fp + (-3), felt*)]",
                    "pc": 24
                },
                {
                    "ap_tracking_data": {
                        "group": 4,
                        "offset": 0
                    },
                    "value": "[cast(fp + (-5), felt*)]",
                    "pc": 24
                },
                {
                    "ap_tracking_data": {
                        "group": 5,
                        "offset": 0
                    },
                    "value": "[cast(fp + (-4), felt*)]",
                    "pc": 69
                },
                {
                    "ap_tracking_data": {
                        "group": 5,
                        "offset": 0
                    },
                    "value": "[cast(fp + (-3), felt*)]",
                    "pc": 69
                },
                {
                    "ap_tracking_data": {
                        "group": 7,
                        "offset": 0
                    },
                    "value": "[cast(fp + (-4), felt*)]",
                    "pc": 86
                },
                {
                    "ap_tracking_data": {
                        "group": 7,
                        "offset": 0
                    },
                    "value": "[cast(fp + (-3), felt*)]",
                    "pc": 86
                }
            ]
        },
        "main_scope": "__main__",
        "debug_info": null,
        "attributes": [
            {
                "flow_tracking_data": {
                    "reference_ids": {},
                    "ap_tracking": {
                        "group": 28,
                        "offset": 0
                    }
                },
                "accessible_scopes": [
                    "contracts.shape.construction_guards",
                    "contracts.shape.construction_guards",
                    "contracts.shape.construction_guards._check_nfts_ok"
                ],
                "value": "Shape does not have the right number of NFTs",
                "start_pc": 331,
                "end_pc": 333,
                "name": "error_message"
            },
            {
                "flow_tracking_data": {
                    "reference_ids": {},
                    "ap_tracking": {
                        "group": 28,
                        "offset": 37
                    }
                },
                "accessible_scopes": [
                    "contracts.shape.construction_guards",
                    "contracts.shape.construction_guards",
                    "contracts.shape.construction_guards._check_nfts_ok"
                ],
                "value": "Shape does not have the right number of NFTs",
                "start_pc": 353,
                "end_pc": 356,
                "name": "error_message"
            },
            {
                "flow_tracking_data": {
                    "reference_ids": {},
                    "ap_tracking": {
                        "group": 28,
                        "offset": 40
                    }
                },
                "accessible_scopes": [
                    "contracts.shape.construction_guards",
                    "contracts.shape.construction_guards",
                    "contracts.shape.construction_guards._check_nfts_ok"
                ],
                "value": "NFT does not have the right material",
                "start_pc": 356,
                "end_pc": 368,
                "name": "error_message"
            },
            {
                "flow_tracking_data": {
                    "reference_ids": {},
                    "ap_tracking": {
                        "group": 107,
                        "offset": 0
                    }
                },
                "accessible_scopes": [
                    "__main__",
                    "__main__._validate_nth_shape"
                ],
                "value": "Shape items contains duplicate position or NFTs",
                "start_pc": 612,
                "end_pc": 622,
                "name": "error_message"
            },
            {
                "flow_tracking_data": {
                    "reference_ids": {},
                    "ap_tracking": {
                        "group": 108,
                        "offset": 0
                    }
                },
                "accessible_scopes": [
                    "__main__",
                    "__main__._validate_nth_shape"
                ],
                "value": "Shape items are not properly sorted (increasing X/Y/Z)",
                "start_pc": 622,
                "end_pc": 626,
                "name": "error_message"
            },
            {
                "flow_tracking_data": {
                    "reference_ids": {},
                    "ap_tracking": {
                        "group": 132,
                        "offset": 0
                    }
                },
                "accessible_scopes": [
                    "__main__",
                    "__main__",
                    "__main__.check_shape_numbers_"
                ],
                "value": "Wrong number of shape items",
                "start_pc": 1012,
                "end_pc": 1024,
                "name": "error_message"
            },
            {
                "flow_tracking_data": {
                    "reference_ids": {},
                    "ap_tracking": {
                        "group": 132,
                        "offset": 44
                    }
                },
                "accessible_scopes": [
                    "__main__",
                    "__main__",
                    "__main__.check_shape_numbers_"
                ],
                "value": "Wrong number of NFTs",
                "start_pc": 1024,
                "end_pc": 1034,
                "name": "error_message"
            },
            {
                "flow_tracking_data": {
                    "reference_ids": {},
                    "ap_tracking": {
                        "group": 141,
                        "offset": 0
                    }
                },
                "accessible_scopes": [
                    "__main__",
                    "__main__._check_shape_numbers_impl_"
                ],
                "value": "Wrong number of briqs in shape",
                "start_pc": 1179,
                "end_pc": 1189,
                "name": "error_message"
            },
            {
                "flow_tracking_data": {
                    "reference_ids": {},
                    "ap_tracking": {
                        "group": 141,
                        "offset": 0
                    }
                },
                "accessible_scopes": [
                    "__main__",
                    "__main__._check_shape_numbers_impl_"
                ],
                "value": "Shapes do not match",
                "start_pc": 1190,
                "end_pc": 1199,
                "name": "error_message"
            },
            {
                "flow_tracking_data": {
                    "reference_ids": {},
                    "ap_tracking": {
                        "group": 143,
                        "offset": 38
                    }
                },
                "accessible_scopes": [
                    "__main__",
                    "__main__._check_shape_numbers_impl_"
                ],
                "value": "Incorrect NFT",
                "start_pc": 1214,
                "end_pc": 1228,
                "name": "error_message"
            },
            {
                "flow_tracking_data": {
                    "reference_ids": {},
                    "ap_tracking": {
                        "group": 147,
                        "offset": 0
                    }
                },
                "accessible_scopes": [
                    "__main__",
                    "__main__._decrement_ft_qty"
                ],
                "value": "Material not found in FT list",
                "start_pc": 1286,
                "end_pc": 1288,
                "name": "error_message"
            }
        ],
        "data": [
            "0x40780017fff7fff",
            "0x1",
            "0x208b7fff7fff7ffe",
            "0x20780017fff7ffd",
            "0x3",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480080007fff8000",
            "0x400080007ffd7fff",
            "0x482480017ffd8001",
            "0x1",
            "0x482480017ffd8001",
            "0x1",
            "0xa0680017fff7ffe",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffffb",
            "0x402a7ffc7ffd7fff",
            "0x208b7fff7fff7ffe",
            "0x208b7fff7fff7ffe",
            "0x20780017fff7ffd",
            "0x4",
            "0x400780017fff7ffd",
            "0x1",
            "0x208b7fff7fff7ffe",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x484480017fff8000",
            "0x2aaaaaaaaaaaab05555555555555556",
            "0x48307fff7ffd8000",
            "0x480280027ffb8000",
            "0x480280037ffb8000",
            "0x484480017fff8000",
            "0x4000000000000088000000000000001",
            "0x48307fff7ffd8000",
            "0xa0680017fff8000",
            "0xe",
            "0x480680017fff8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x48287ffc80007fff",
            "0x40307ffc7ff87fff",
            "0x48297ffd80007ffc",
            "0x482680017ffd8000",
            "0x1",
            "0x48507fff7ffe8000",
            "0x40507ff97ff57fff",
            "0x482680017ffb8000",
            "0x4",
            "0x208b7fff7fff7ffe",
            "0xa0680017fff8000",
            "0xc",
            "0x480680017fff8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x48287ffd80007fff",
            "0x48327fff7ffc8000",
            "0x40307ffa7ff67fff",
            "0x48527ffe7ffc8000",
            "0x40507ff97ff57fff",
            "0x482680017ffb8000",
            "0x4",
            "0x208b7fff7fff7ffe",
            "0x40317ffd7ff97ffd",
            "0x48297ffc80007ffd",
            "0x48527fff7ffc8000",
            "0x40507ffb7ff77fff",
            "0x40780017fff7fff",
            "0x2",
            "0x482680017ffb8000",
            "0x4",
            "0x208b7fff7fff7ffe",
            "0x48297ffd80007ffc",
            "0x20680017fff7fff",
            "0x4",
            "0x402780017ffc7ffc",
            "0x1",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffcc",
            "0x208b7fff7fff7ffe",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffc3",
            "0x482680017ffd8000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffaf",
            "0x48307fff7ffe8000",
            "0x208b7fff7fff7ffe",
            "0xa0680017fff8000",
            "0xc",
            "0x40780017fff7fff",
            "0x6",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffbc",
            "0x480680017fff8000",
            "0x1",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480a7ffd7fff8000",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe1",
            "0x480680017fff8000",
            "0x0",
            "0x208b7fff7fff7ffe",
            "0x400380007ffb7ffc",
            "0x400380017ffb7ffd",
            "0x482680017ffb8000",
            "0x5",
            "0x480280027ffb8000",
            "0x208b7fff7fff7ffe",
            "0x20780017fff7ffc",
            "0x7",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x22",
            "0x208b7fff7fff7ffe",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x400080007ffe7fff",
            "0x482680017ffd8000",
            "0x1",
            "0x480280007ffd8000",
            "0x484480017fff8000",
            "0x2",
            "0x48307fff7ffd8000",
            "0x402a7ffd7ffc7fff",
            "0x480280027ffb8000",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280037ffb8000",
            "0x482480017ffc8000",
            "0x1",
            "0x480280007ffd8000",
            "0x482680017ffd8000",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffde",
            "0x40780017fff7fff",
            "0x1",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffa7fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x482680017ffc8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x20680017fff7fff",
            "0x7",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffb7fff8000",
            "0x480280017ffd8000",
            "0x480280037ffd8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff9b",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x48127ffc7fff8000",
            "0x482680017ffc8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x482680017ffd8000",
            "0x2",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffeb",
            "0x208b7fff7fff7ffe",
            "0x20780017fff7ffa",
            "0x9",
            "0x400780017fff7ffc",
            "0x0",
            "0x480a7ff67fff8000",
            "0x480a7ff77fff8000",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff67fff8000",
            "0x480a7ff77fff8000",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x1104800180018000",
            "0x33",
            "0x20780017fff7ffc",
            "0x3",
            "0x208b7fff7fff7ffe",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x49",
            "0x208b7fff7fff7ffe",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x400080007ffe7fff",
            "0x482680017ffd8000",
            "0x1",
            "0x480280007ffd8000",
            "0x484480017fff8000",
            "0x2",
            "0x48307fff7ffd8000",
            "0x480280027ffb8000",
            "0x480080007ffe8000",
            "0x400080017ffe7fff",
            "0x482480017ffd8000",
            "0x1",
            "0x480080007ffc8000",
            "0x48307fff7ffe8000",
            "0x402a7ffd7ffc7fff",
            "0x480280027ffb8000",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280037ffb8000",
            "0x482480017ffc8000",
            "0x2",
            "0x480280007ffd8000",
            "0x482680017ffd8000",
            "0x1",
            "0x480080007ff38000",
            "0x482480017ff28000",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffcb",
            "0x40780017fff7fff",
            "0x1",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffa7fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x482680017ffc8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x20680017fff7fff",
            "0x7",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480280017ffd8000",
            "0x480280037ffd8000",
            "0x48307fff80007ffe",
            "0x20680017fff7fff",
            "0x6",
            "0x480680017fff8000",
            "0x1",
            "0x400680017fff7fff",
            "0x0",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x482680017ffc8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x482680017ffd8000",
            "0x2",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe7",
            "0x208b7fff7fff7ffe",
            "0x482680017ffc8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x20680017fff7fff",
            "0x7",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480280007ffd8000",
            "0x482680017ffc8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x482680017ffd8000",
            "0x1",
            "0x1104800180018000",
            "0x9",
            "0x482680017ffc8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x482680017ffd8000",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe9",
            "0x208b7fff7fff7ffe",
            "0x20780017fff7ffc",
            "0x7",
            "0x480a7ff77fff8000",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480280007ffd8000",
            "0x48317fff80007ffb",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffed9",
            "0x480a7ff77fff8000",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x482680017ffc8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x482680017ffd8000",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffed",
            "0x208b7fff7fff7ffe",
            "0x20780017fff7ffa",
            "0x9",
            "0x400780017fff7ffc",
            "0x0",
            "0x480a7ff67fff8000",
            "0x480a7ff77fff8000",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x208b7fff7fff7ffe",
            "0x480680017fff8000",
            "0x400000000000008800000000000000002000000000000044000000000000001",
            "0x480280007ffb8000",
            "0x484480017fff8000",
            "0x800000000000010fffffffffffffffffdfffffffffffffbc000000000000001",
            "0x480a7ff97fff8000",
            "0x480680017fff8000",
            "0x600000000000000000000000000000000000000000000000000000000000000",
            "0x48307ffd80007ffb",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffefc",
            "0x482480017fff8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x20680017fff7fff",
            "0x20",
            "0x480a7ffc7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffeb2",
            "0x480280007ffb8000",
            "0x480280007ffd8000",
            "0x48307fff80007ffe",
            "0x48127ff77fff8000",
            "0x484480017ffe8000",
            "0x800000000000010f7ffffffffffffef00000000000000000000000000000001",
            "0x480680017fff8000",
            "0x80000000000000000000000000000000000000000000000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffeeb",
            "0x400680017fff7fff",
            "0x1",
            "0x480a7ff67fff8000",
            "0x480a7ff77fff8000",
            "0x480a7ff87fff8000",
            "0x48127ffb7fff8000",
            "0x482680017ffa8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x482680017ffb8000",
            "0x2",
            "0x482680017ffc8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x482680017ffd8000",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffce",
            "0x208b7fff7fff7ffe",
            "0x480a7ff67fff8000",
            "0x480a7ff77fff8000",
            "0x480a7ff87fff8000",
            "0x48127ffa7fff8000",
            "0x482680017ffa8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x482680017ffb8000",
            "0x2",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffc1",
            "0x208b7fff7fff7ffe",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x400080007ffe7fff",
            "0x482680017ffd8000",
            "0x1",
            "0x480280007ffd8000",
            "0x484480017fff8000",
            "0x2",
            "0x48307fff7ffd8000",
            "0x480280027ffb8000",
            "0x480080007ffe8000",
            "0x400080017ffe7fff",
            "0x482480017ffd8000",
            "0x1",
            "0x480080007ffc8000",
            "0x48307fff7ffe8000",
            "0x402a7ffd7ffc7fff",
            "0x480280027ffb8000",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280037ffb8000",
            "0x482480017ffc8000",
            "0x2",
            "0x480280007ffd8000",
            "0x482680017ffd8000",
            "0x1",
            "0x480080007ff38000",
            "0x482480017ff28000",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffa1",
            "0x40780017fff7fff",
            "0x1",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffa7fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x0",
            "0x1f",
            "0x233661366136610000000000000000000000000000000001",
            "0x7fffffffffffffff80000000000000007ffffffffffffffe",
            "0x233661366136610000000000000000000000000000000001",
            "0x7fffffffffffffff80000000000000008000000000000001",
            "0x236335633563350000000000000000000000000000000001",
            "0x7fffffffffffffff80000000000000017ffffffffffffffe",
            "0x236335633563350000000000000000000000000000000001",
            "0x7fffffffffffffff80000000000000018000000000000001",
            "0x236335633563350000000000000000000000000000000001",
            "0x7fffffffffffffff80000000000000027ffffffffffffffe",
            "0x236335633563350000000000000000000000000000000001",
            "0x7fffffffffffffff80000000000000027fffffffffffffff",
            "0x236335633563350000000000000000000000000000000001",
            "0x7fffffffffffffff80000000000000028000000000000000",
            "0x233661366136610000000000000000000000000000000001",
            "0x7fffffffffffffff80000000000000028000000000000001",
            "0x236633353730300000000000000000000000000000000001",
            "0x7fffffffffffffff80000000000000048000000000000002",
            "0x233165316531650000000000000000000000000000000001",
            "0x800000000000000080000000000000017ffffffffffffffc",
            "0x236335633563350000000000000000000000000000000001",
            "0x800000000000000080000000000000017fffffffffffffff",
            "0x236335633563350000000000000000000000000000000001",
            "0x800000000000000080000000000000018000000000000000",
            "0x233239323936650000000000000000000000000000000001",
            "0x800000000000000080000000000000027ffffffffffffffd",
            "0x236633353730300000000000000000000000000000000001",
            "0x800000000000000080000000000000028000000000000001",
            "0x236335633563350000000000000000000000000000000001",
            "0x800000000000000080000000000000028000000000000002",
            "0x236335633563350000000000000000000000000000000001",
            "0x800000000000000080000000000000028000000000000003",
            "0x233165316531650000000000000000000000000000000001",
            "0x800000000000000080000000000000028000000000000004",
            "0x236438303130310000000000000000000000000000000001",
            "0x800000000000000080000000000000037ffffffffffffffe",
            "0x236438303130310000000000000000000000000000000001",
            "0x800000000000000080000000000000037fffffffffffffff",
            "0x236438303130310000000000000000000000000000000001",
            "0x800000000000000080000000000000038000000000000000",
            "0x236335633563350000000000000000000000000000000001",
            "0x800000000000000080000000000000038000000000000002",
            "0x233632626466360000000000000000000000000000000001",
            "0x800000000000000080000000000000038000000000000003",
            "0x233661366136610000000000000000000000000000000001",
            "0x800000000000000180000000000000007ffffffffffffffe",
            "0x233661366136610000000000000000000000000000000001",
            "0x800000000000000180000000000000008000000000000001",
            "0x236335633563350000000000000000000000000000000001",
            "0x800000000000000180000000000000017ffffffffffffffe",
            "0x236335633563350000000000000000000000000000000001",
            "0x800000000000000180000000000000018000000000000001",
            "0x236335633563350000000000000000000000000000000001",
            "0x800000000000000180000000000000027ffffffffffffffe",
            "0x236335633563350000000000000000000000000000000001",
            "0x800000000000000180000000000000027fffffffffffffff",
            "0x236335633563350000000000000000000000000000000001",
            "0x800000000000000180000000000000028000000000000000",
            "0x233661366136610000000000000000000000000000000001",
            "0x800000000000000180000000000000028000000000000001",
            "0x236633353730300000000000000000000000000000000001",
            "0x800000000000000180000000000000048000000000000002",
            "0x0",
            "0x0",
            "0x480680017fff8000",
            "0x1b5",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe58",
            "0x480680017fff8000",
            "0x1b7",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe54",
            "0x482480017ff88000",
            "0x1",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x48307ffb80007ffa",
            "0x208b7fff7fff7ffe",
            "0x480680017fff8000",
            "0x1b5",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe48",
            "0x480680017fff8000",
            "0x1b7",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe44",
            "0x48287ffd7ff88000",
            "0x480080007fff8000",
            "0x484480017fff8000",
            "0x2",
            "0x482680017ffd8000",
            "0x1",
            "0x48307fff7ff48000",
            "0x480080007fff8000",
            "0x484480017fff8000",
            "0x2",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x48307ff77ff48000",
            "0x48307ffa7ff38000",
            "0x208b7fff7fff7ffe",
            "0x480680017fff8000",
            "0x1f5",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe2f",
            "0x480680017fff8000",
            "0x1f7",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe2b",
            "0x48287ffd7ff88000",
            "0x480080007fff8000",
            "0x482680017ffd8000",
            "0x1",
            "0x48307fff7ff58000",
            "0x480080007fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x48307ff87ff68000",
            "0x48307ffa7ff58000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffbf",
            "0x1104800180018000",
            "0x14",
            "0x208b7fff7fff7ffe",
            "0x402b7ffd7ffc7ffd",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280037ffb8000",
            "0x480280027ffb8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff3",
            "0x40780017fff7fff",
            "0x1",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffa7fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x4",
            "0x20780017fff7ffd",
            "0x7",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x482680017ffd8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x1104800180018000",
            "0x1f",
            "0x40137ffc7fff8000",
            "0x40137ffd7fff8001",
            "0x40137ffe7fff8002",
            "0x40137fff7fff8003",
            "0x48127ff87fff8000",
            "0x48127ff87fff8000",
            "0x48127ff87fff8000",
            "0x48127ff87fff8000",
            "0x480a80007fff8000",
            "0x480a80017fff8000",
            "0x480a80027fff8000",
            "0x480a80037fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe4d",
            "0x480a80007fff8000",
            "0x480a80017fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe01",
            "0x480a80007fff8000",
            "0x480a80017fff8000",
            "0x480a80027fff8000",
            "0x480a80037fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffed4",
            "0x482680017ffd8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffd6",
            "0x208b7fff7fff7ffe",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff86",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff98",
            "0x48307fde80007fdf",
            "0x48127ff97fff8000",
            "0x48127ff97fff8000",
            "0x48127ff97fff8000",
            "0x48127ff97fff8000",
            "0x484480017ffb8000",
            "0x400000000000008800000000000000000000000000000000000000000000001",
            "0x48127fd87fff8000",
            "0x48307ff780007ff8",
            "0x48127ff67fff8000",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffffe",
            "0x484480017fff8000",
            "0x800000000000010fffffffffffffffffffffffffffffffff7fffffffffffff0",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x482480017ffb8000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff1c",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x4003800080007ffc",
            "0x4826800180008000",
            "0x1",
            "0x480a7ffd7fff8000",
            "0x4828800080007ffe",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x1",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280037ffb8000",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe5",
            "0x48127ffe7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffed",
            "0x48127ff37fff8000",
            "0x48127ff37fff8000",
            "0x48127ffb7fff8000",
            "0x48127ff27fff8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffffe",
            "0x484480017fff8000",
            "0x800000000000010fffffffffffffffffffffffffffffffff7fffffffffffff0",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x482480017ffb8000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff1c",
            "0x208b7fff7fff7ffe",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff1",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffae",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x5",
            "0x4003800080007ff9",
            "0x400380007ffd7ff9",
            "0x402780017ffd8001",
            "0x1",
            "0x4826800180008000",
            "0x1",
            "0x484680017ff98000",
            "0x2",
            "0x40317fff7ffe8002",
            "0x4826800180008000",
            "0x1",
            "0x480a7ffa7fff8000",
            "0x484680017ff98000",
            "0x2",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd21",
            "0x4003800080027ffb",
            "0x4003800080017ffb",
            "0x4027800180018003",
            "0x1",
            "0x4826800180028000",
            "0x1",
            "0x40297ffb7fff8004",
            "0x4826800180028000",
            "0x1",
            "0x480a7ffc7fff8000",
            "0x480a7ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd14",
            "0x480a80037fff8000",
            "0x4829800080008004",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x3",
            "0x482680017ffd8000",
            "0x1",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280037ffb8000",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffca",
            "0x40137ff87fff8000",
            "0x40137ff97fff8001",
            "0x40137ffa7fff8002",
            "0x48127ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffce",
            "0x480a80007fff8000",
            "0x480a80017fff8000",
            "0x48127ffb7fff8000",
            "0x480a80027fff8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480280017ffc8000",
            "0x48287ffb80007fff",
            "0x20680017fff7fff",
            "0x8",
            "0x480a7ff77fff8000",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480280007ffd8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff97fff8000",
            "0x480280007ffc8000",
            "0x480680017fff8000",
            "0x100000000000000000000000000000000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd49",
            "0x482480017fff8000",
            "0x800000000000010ffffffffffffffff00000000000000000000000000000001",
            "0x20680017fff7fff",
            "0xe",
            "0x480a7ff77fff8000",
            "0x480a7ff87fff8000",
            "0x48127ffb7fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x482680017ffc8000",
            "0x2",
            "0x482680017ffd8000",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe4",
            "0x208b7fff7fff7ffe",
            "0x480a7ff77fff8000",
            "0x480a7ff87fff8000",
            "0x48127ffb7fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x482680017ffc8000",
            "0x2",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffd9",
            "0x208b7fff7fff7ffe",
            "0x480a7ff97fff8000",
            "0x480a7ffb7fff8000",
            "0x480680017fff8000",
            "0x100000000000000000000000000000000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd28",
            "0x482480017fff8000",
            "0x800000000000010ffffffffffffffff00000000000000000000000000000001",
            "0x20680017fff7fff",
            "0x4",
            "0x10780017fff7fff",
            "0x39",
            "0x48127ffd7fff8000",
            "0x480a7ffb7fff8000",
            "0x480680017fff8000",
            "0x7ffffffffffffffffffffffffffff0000000000000000000000000000000000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd1c",
            "0x48127ffe7fff8000",
            "0x480a7ffb7fff8000",
            "0x480680017fff8000",
            "0xffffffffffffffff",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd16",
            "0x48127ffe7fff8000",
            "0x480a7ffc7fff8000",
            "0x480680017fff8000",
            "0x7ffffffffffffffffffffffffffffff00000000000000000000000000000000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd10",
            "0x48127ffe7fff8000",
            "0x480a7ffc7fff8000",
            "0x480680017fff8000",
            "0xffffffffffffffff0000000000000000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd0a",
            "0x48127ffe7fff8000",
            "0x480a7ffc7fff8000",
            "0x480680017fff8000",
            "0xffffffffffffffff",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd04",
            "0x484480017ff18000",
            "0x800000000000010fffffffffffffffff7ffffffffffffef0000000000000001",
            "0x484480017ff78000",
            "0x800000000000010f7ffffffffffffef00000000000000000000000000000001",
            "0x48127fe87fff8000",
            "0x484480017fe08000",
            "0x800000000000010fffffffffffffffffff7ffffffffffffef00000000000001",
            "0x482480017ffc8000",
            "0x800000000000010ffffffffffffffffffffffffffffffff8000000000000001",
            "0x482480017ffc8000",
            "0x800000000000010ffffffffffffffffffffffffffffffff8000000000000001",
            "0x482480017ff98000",
            "0x800000000000010ffffffffffffffffffffffffffffffff8000000000000001",
            "0x48127fd47fff8000",
            "0x480a7ff77fff8000",
            "0x480a7ff87fff8000",
            "0x48127ff47fff8000",
            "0x480a7ffa7fff8000",
            "0x48127ff67fff8000",
            "0x48127ff67fff8000",
            "0x48127ff67fff8000",
            "0x48127ff67fff8000",
            "0x48127ff67fff8000",
            "0x48127ff67fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff77fff8000",
            "0x480a7ff87fff8000",
            "0x48127ffb7fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe81",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe93",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x480a7ffc7fff8000",
            "0x48127fd97fff8000",
            "0x48127ff87fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff7e",
            "0x48127ffd7fff8000",
            "0x480a7ffb7fff8000",
            "0x480680017fff8000",
            "0x7ffffffffffffffffffffffffffff0000000000000000000000000000000000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffcce",
            "0x48127ffe7fff8000",
            "0x480a7ffb7fff8000",
            "0x480680017fff8000",
            "0xffffffffffffffff",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffcc8",
            "0x48127ffe7fff8000",
            "0x480a7ffc7fff8000",
            "0x480680017fff8000",
            "0x7ffffffffffffffffffffffffffffff00000000000000000000000000000000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffcc2",
            "0x48127ffe7fff8000",
            "0x480a7ffc7fff8000",
            "0x480680017fff8000",
            "0xffffffffffffffff0000000000000000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffcbc",
            "0x48127ffe7fff8000",
            "0x480a7ffc7fff8000",
            "0x480680017fff8000",
            "0xffffffffffffffff",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffcb6",
            "0x484480017ff18000",
            "0x800000000000010fffffffffffffffff7ffffffffffffef0000000000000001",
            "0x484480017ff78000",
            "0x800000000000010f7ffffffffffffef00000000000000000000000000000001",
            "0x48127fe87fff8000",
            "0x484480017fe08000",
            "0x800000000000010fffffffffffffffffff7ffffffffffffef00000000000001",
            "0x482480017ffc8000",
            "0x800000000000010ffffffffffffffffffffffffffffffff8000000000000001",
            "0x482480017ffc8000",
            "0x800000000000010ffffffffffffffffffffffffffffffff8000000000000001",
            "0x482480017ff98000",
            "0x800000000000010ffffffffffffffffffffffffffffffff8000000000000001",
            "0x48127fd57fff8000",
            "0x48127fd07fff8000",
            "0x48127fd07fff8000",
            "0x48127ff47fff8000",
            "0x48127fd07fff8000",
            "0x48127ff67fff8000",
            "0x48127ff67fff8000",
            "0x48127ff67fff8000",
            "0x48127ff67fff8000",
            "0x48127ff67fff8000",
            "0x48127ff67fff8000",
            "0x208b7fff7fff7ffe",
            "0x40780017fff7fff",
            "0x1",
            "0x4003800080007ff7",
            "0x4003800180007ff8",
            "0x4003800280007ff9",
            "0x4003800380007ffa",
            "0x4003800480007ffb",
            "0x4003800580007ffc",
            "0x4826800180008000",
            "0x6",
            "0x480a7ffd7fff8000",
            "0x4828800080007ffe",
            "0x480a80007fff8000",
            "0x208b7fff7fff7ffe",
            "0x482680017ffd8000",
            "0x3",
            "0x402a7ffd7ffc7fff",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280037ffb8000",
            "0x480280027ffb8000",
            "0x480280007ffd8000",
            "0x480280017ffd8000",
            "0x480280027ffd8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff58",
            "0x48127ff97fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe6",
            "0x48127fee7fff8000",
            "0x48127fee7fff8000",
            "0x48127ffb7fff8000",
            "0x48127fed7fff8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480a7ff37fff8000",
            "0x480a7ff47fff8000",
            "0x480a7ff57fff8000",
            "0x480a7ff67fff8000",
            "0x480a7ff77fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffec6",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe0d",
            "0x48307ffe80007fff",
            "0x404580017fff7ff8",
            "0x400000000000008800000000000000000000000000000000000000000000001",
            "0x48127ff97fff8000",
            "0x48127ff97fff8000",
            "0x48127ff97fff8000",
            "0x48127ff97fff8000",
            "0x480a7ff77fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffeba",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe1a",
            "0x40327ffe7ffc7fff",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffbf7",
            "0x48127ff77fff8000",
            "0x48127ff77fff8000",
            "0x48127ff77fff8000",
            "0x48127ff77fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x48127ff97fff8000",
            "0x1104800180018000",
            "0x5a",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x480a7ff77fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffea5",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe05",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x480a7ff77fff8000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe9c",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffde3",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x48127ffa7fff8000",
            "0x48127fce7fff8000",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x48287ffa80007fa1",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x65",
            "0x208b7fff7fff7ffe",
            "0x480280027ffb8000",
            "0x480280017ffd8000",
            "0x400080007ffe7fff",
            "0x482680017ffd8000",
            "0x2",
            "0x480280017ffd8000",
            "0x484480017fff8000",
            "0x2",
            "0x48307fff7ffd8000",
            "0x480280027ffb8000",
            "0x480080007ffe8000",
            "0x400080017ffe7fff",
            "0x482480017ffd8000",
            "0x1",
            "0x480080007ffc8000",
            "0x484480017fff8000",
            "0x2",
            "0x48307fff7ffd8000",
            "0x480280027ffb8000",
            "0x480080007ffe8000",
            "0x400080027ffe7fff",
            "0x482480017ffd8000",
            "0x1",
            "0x480080007ffc8000",
            "0x48307fff7ffe8000",
            "0x402a7ffd7ffc7fff",
            "0x480280027ffb8000",
            "0x480280007ffb8000",
            "0x480280017ffb8000",
            "0x480280037ffb8000",
            "0x482480017ffc8000",
            "0x3",
            "0x480280007ffd8000",
            "0x480280017ffd8000",
            "0x482680017ffd8000",
            "0x2",
            "0x480080007fec8000",
            "0x482480017feb8000",
            "0x1",
            "0x480080007ff08000",
            "0x482480017fef8000",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff94",
            "0x40780017fff7fff",
            "0x1",
            "0x48127ffb7fff8000",
            "0x48127ffb7fff8000",
            "0x48127ffc7fff8000",
            "0x48127ffa7fff8000",
            "0x480680017fff8000",
            "0x0",
            "0x48127ffa7fff8000",
            "0x208b7fff7fff7ffe",
            "0x20780017fff7ffb",
            "0x8",
            "0x480a7ff77fff8000",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffd7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480280017ffc8000",
            "0x400280007ffd7fff",
            "0x480a7ff77fff8000",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x482680017ffb8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x482680017ffc8000",
            "0x2",
            "0x482680017ffd8000",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffed",
            "0x208b7fff7fff7ffe",
            "0x20780017fff7ffc",
            "0x7",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x208b7fff7fff7ffe",
            "0x480680017fff8000",
            "0x0",
            "0x400280007ffd7fff",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x482680017ffc8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x482680017ffd8000",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffef",
            "0x208b7fff7fff7ffe",
            "0x20780017fff7ff7",
            "0xd",
            "0x480a7ff17fff8000",
            "0x480a7ff27fff8000",
            "0x480a7ff37fff8000",
            "0x480a7ff47fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffb7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe4",
            "0x400780017fff7ffc",
            "0x0",
            "0x208b7fff7fff7ffe",
            "0x480280007ff58000",
            "0x20680017fff7fff",
            "0x4",
            "0x10780017fff7fff",
            "0x4",
            "0x480280007ff88000",
            "0x400280007ff57fff",
            "0x480280017ff88000",
            "0x400280017ff57fff",
            "0x480680017fff8000",
            "0x400000000000008800000000000000002000000000000044000000000000001",
            "0x480280007ff88000",
            "0x484480017fff8000",
            "0x800000000000010fffffffffffffffffdfffffffffffffbc000000000000001",
            "0x480a7ff47fff8000",
            "0x480680017fff8000",
            "0x600000000000000000000000000000000000000000000000000000000000000",
            "0x48307ffd80007ffb",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb9f",
            "0x482480017fff8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x20680017fff7fff",
            "0x26",
            "0x480280007ffd8000",
            "0x400280007ff67fff",
            "0x480280007ff88000",
            "0x480280007ffd8000",
            "0x48307fff80007ffe",
            "0x48127ff97fff8000",
            "0x484480017ffe8000",
            "0x800000000000010f7ffffffffffffef00000000000000000000000000000001",
            "0x480680017fff8000",
            "0x80000000000000000000000000000000000000000000000",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb8f",
            "0x400680017fff7fff",
            "0x1",
            "0x480a7ff17fff8000",
            "0x480a7ff27fff8000",
            "0x480a7ff37fff8000",
            "0x48127ffb7fff8000",
            "0x482680017ff58000",
            "0x2",
            "0x482680017ff68000",
            "0x1",
            "0x482680017ff78000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x482680017ff88000",
            "0x2",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x482680017ffc8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x482680017ffd8000",
            "0x1",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffbb",
            "0x208b7fff7fff7ffe",
            "0x480a7ff37fff8000",
            "0x480280007ff88000",
            "0x480680017fff8000",
            "0xffffffffffffffff",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb85",
            "0x1104800180018000",
            "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffb2c",
            "0x480a7ff17fff8000",
            "0x480a7ff27fff8000",
            "0x48127ffa7fff8000",
            "0x48127ff17fff8000",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x480a7ffb7fff8000",
            "0x48127ff67fff8000",
            "0x480a7ff97fff8000",
            "0x1104800180018000",
            "0x11",
            "0x482680017ff58000",
            "0x2",
            "0x480a7ff67fff8000",
            "0x482680017ff78000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x482680017ff88000",
            "0x2",
            "0x480a7ff97fff8000",
            "0x480a7ffa7fff8000",
            "0x482a7ff97ffb8000",
            "0x480a7ffc7fff8000",
            "0x480a7ffd7fff8000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff99",
            "0x208b7fff7fff7ffe",
            "0x20780017fff7ffd",
            "0x9",
            "0x400780017fff7ffc",
            "0x0",
            "0x480a7ff57fff8000",
            "0x480a7ff67fff8000",
            "0x480a7ff77fff8000",
            "0x480a7ff87fff8000",
            "0x208b7fff7fff7ffe",
            "0x480280007ffa8000",
            "0x48317fff80007ffc",
            "0x20680017fff7fff",
            "0x17",
            "0x482a7ff97ffb8000",
            "0x480280007ffb8000",
            "0x482480017fff8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x400080007ffd7fff",
            "0x480a7ff57fff8000",
            "0x480a7ff67fff8000",
            "0x480a7ff77fff8000",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x482680017ffa8000",
            "0x2",
            "0x482680017ffb8000",
            "0x1",
            "0x480680017fff8000",
            "0x0",
            "0x482680017ffd8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe2",
            "0x208b7fff7fff7ffe",
            "0x482a7ff97ffb8000",
            "0x480280007ffb8000",
            "0x400080007ffe7fff",
            "0x480a7ff57fff8000",
            "0x480a7ff67fff8000",
            "0x480a7ff77fff8000",
            "0x480a7ff87fff8000",
            "0x480a7ff97fff8000",
            "0x482680017ffa8000",
            "0x2",
            "0x482680017ffb8000",
            "0x1",
            "0x480a7ffc7fff8000",
            "0x482680017ffd8000",
            "0x800000000000011000000000000000000000000000000000000000000000000",
            "0x1104800180018000",
            "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffd0",
            "0x208b7fff7fff7ffe"
        ],
        "hints": {
            "0": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.alloc",
                        "starkware.cairo.common.alloc.alloc"
                    ],
                    "flow_tracking_data": {
                        "reference_ids": {},
                        "ap_tracking": {
                            "group": 0,
                            "offset": 0
                        }
                    },
                    "code": "memory[ap] = segments.add()"
                }
            ],
            "6": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.memcpy",
                        "starkware.cairo.common.memcpy.memcpy"
                    ],
                    "flow_tracking_data": {
                        "reference_ids": {
                            "starkware.cairo.common.memcpy.memcpy.len": 0
                        },
                        "ap_tracking": {
                            "group": 1,
                            "offset": 0
                        }
                    },
                    "code": "vm_enter_scope({'n': ids.len})"
                }
            ],
            "14": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.memcpy",
                        "starkware.cairo.common.memcpy.memcpy"
                    ],
                    "flow_tracking_data": {
                        "reference_ids": {
                            "starkware.cairo.common.memcpy.memcpy.continue_copying": 1
                        },
                        "ap_tracking": {
                            "group": 1,
                            "offset": 5
                        }
                    },
                    "code": "n -= 1\\nids.continue_copying = 1 if n > 0 else 0"
                }
            ],
            "17": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.memcpy",
                        "starkware.cairo.common.memcpy.memcpy"
                    ],
                    "flow_tracking_data": {
                        "reference_ids": {},
                        "ap_tracking": {
                            "group": 1,
                            "offset": 6
                        }
                    },
                    "code": "vm_exit_scope()"
                }
            ],
            "19": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_not_zero"
                    ],
                    "flow_tracking_data": {
                        "reference_ids": {
                            "starkware.cairo.common.math.assert_not_zero.value": 2
                        },
                        "ap_tracking": {
                            "group": 3,
                            "offset": 0
                        }
                    },
                    "code": "from starkware.cairo.common.math_utils import assert_integer\\nassert_integer(ids.value)\\nassert ids.value % PRIME != 0, f'assert_not_zero failed: {ids.value} = 0.'"
                }
            ],
            "24": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_le_felt"
                    ],
                    "flow_tracking_data": {
                        "reference_ids": {
                            "starkware.cairo.common.math.assert_le_felt.a": 3,
                            "starkware.cairo.common.math.assert_le_felt.b": 4,
                            "starkware.cairo.common.math.assert_le_felt.range_check_ptr": 5
                        },
                        "ap_tracking": {
                            "group": 4,
                            "offset": 0
                        }
                    },
                    "code": "import itertools\\n\\nfrom starkware.cairo.common.math_utils import assert_integer\\nassert_integer(ids.a)\\nassert_integer(ids.b)\\na = ids.a % PRIME\\nb = ids.b % PRIME\\nassert a <= b, f'a = {a} is not less than or equal to b = {b}.'\\n\\n# Find an arc less than PRIME / 3, and another less than PRIME / 2.\\nlengths_and_indices = [(a, 0), (b - a, 1), (PRIME - 1 - b, 2)]\\nlengths_and_indices.sort()\\nassert lengths_and_indices[0][0] <= PRIME // 3 and lengths_and_indices[1][0] <= PRIME // 2\\nexcluded = lengths_and_indices[2][1]\\n\\nmemory[ids.range_check_ptr + 1], memory[ids.range_check_ptr + 0] = (\\n    divmod(lengths_and_indices[0][0], ids.PRIME_OVER_3_HIGH))\\nmemory[ids.range_check_ptr + 3], memory[ids.range_check_ptr + 2] = (\\n    divmod(lengths_and_indices[1][0], ids.PRIME_OVER_2_HIGH))"
                }
            ],
            "34": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_le_felt"
                    ],
                    "flow_tracking_data": {
                        "reference_ids": {},
                        "ap_tracking": {
                            "group": 4,
                            "offset": 8
                        }
                    },
                    "code": "memory[ap] = 1 if excluded != 0 else 0"
                }
            ],
            "48": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_le_felt"
                    ],
                    "flow_tracking_data": {
                        "reference_ids": {},
                        "ap_tracking": {
                            "group": 4,
                            "offset": 9
                        }
                    },
                    "code": "memory[ap] = 1 if excluded != 1 else 0"
                }
            ],
            "60": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_le_felt"
                    ],
                    "flow_tracking_data": {
                        "reference_ids": {},
                        "ap_tracking": {
                            "group": 4,
                            "offset": 10
                        }
                    },
                    "code": "assert excluded == 2"
                }
            ],
            "69": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.math",
                        "starkware.cairo.common.math.assert_lt_felt"
                    ],
                    "flow_tracking_data": {
                        "reference_ids": {
                            "starkware.cairo.common.math.assert_lt_felt.a": 6,
                            "starkware.cairo.common.math.assert_lt_felt.b": 7
                        },
                        "ap_tracking": {
                            "group": 5,
                            "offset": 0
                        }
                    },
                    "code": "from starkware.cairo.common.math_utils import assert_integer\\nassert_integer(ids.a)\\nassert_integer(ids.b)\\nassert (ids.a % PRIME) < (ids.b % PRIME), \\\\\\n    f'a = {ids.a % PRIME} is not less than b = {ids.b % PRIME}.'"
                }
            ],
            "86": [
                {
                    "accessible_scopes": [
                        "starkware.cairo.common.math_cmp",
                        "starkware.cairo.common.math_cmp.is_le_felt"
                    ],
                    "flow_tracking_data": {
                        "reference_ids": {
                            "starkware.cairo.common.math_cmp.is_le_felt.a": 8,
                            "starkware.cairo.common.math_cmp.is_le_felt.b": 9
                        },
                        "ap_tracking": {
                            "group": 7,
                            "offset": 0
                        }
                    },
                    "code": "memory[ap] = 0 if (ids.a % PRIME) <= (ids.b % PRIME) else 1"
                }
            ],
            "149": [
                {
                    "accessible_scopes": [
                        "contracts.shape.construction_guards",
                        "contracts.shape.construction_guards",
                        "__wrappers__",
                        "__wrappers__._check_properly_sorted"
                    ],
                    "flow_tracking_data": {
                        "reference_ids": {},
                        "ap_tracking": {
                            "group": 12,
                            "offset": 0
                        }
                    },
                    "code": "memory[ap] = segments.add()"
                }
            ],
            "240": [
                {
                    "accessible_scopes": [
                        "contracts.shape.construction_guards",
                        "contracts.shape.construction_guards",
                        "__wrappers__",
                        "__wrappers__._check_for_duplicates"
                    ],
                    "flow_tracking_data": {
                        "reference_ids": {},
                        "ap_tracking": {
                            "group": 19,
                            "offset": 0
                        }
                    },
                    "code": "memory[ap] = segments.add()"
                }
            ],
            "427": [
                {
                    "accessible_scopes": [
                        "contracts.shape.construction_guards",
                        "contracts.shape.construction_guards",
                        "__wrappers__",
                        "__wrappers__._check_nfts_ok"
                    ],
                    "flow_tracking_data": {
                        "reference_ids": {},
                        "ap_tracking": {
                            "group": 32,
                            "offset": 0
                        }
                    },
                    "code": "memory[ap] = segments.add()"
                }
            ],
            "581": [
                {
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.constructor"
                    ],
                    "flow_tracking_data": {
                        "reference_ids": {},
                        "ap_tracking": {
                            "group": 105,
                            "offset": 0
                        }
                    },
                    "code": "memory[ap] = segments.add()"
                }
            ],
            "673": [
                {
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.get_local_index__encode_return"
                    ],
                    "flow_tracking_data": {
                        "reference_ids": {},
                        "ap_tracking": {
                            "group": 114,
                            "offset": 0
                        }
                    },
                    "code": "memory[ap] = segments.add()"
                }
            ],
            "723": [
                {
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.shape__encode_return"
                    ],
                    "flow_tracking_data": {
                        "reference_ids": {},
                        "ap_tracking": {
                            "group": 118,
                            "offset": 0
                        }
                    },
                    "code": "memory[ap] = segments.add()"
                }
            ],
            "976": [
                {
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.decompress_data_encode_return"
                    ],
                    "flow_tracking_data": {
                        "reference_ids": {},
                        "ap_tracking": {
                            "group": 129,
                            "offset": 0
                        }
                    },
                    "code": "memory[ap] = segments.add()"
                }
            ],
            "1123": [
                {
                    "accessible_scopes": [
                        "__main__",
                        "__main__",
                        "__wrappers__",
                        "__wrappers__.check_shape_numbers_"
                    ],
                    "flow_tracking_data": {
                        "reference_ids": {},
                        "ap_tracking": {
                            "group": 136,
                            "offset": 0
                        }
                    },
                    "code": "memory[ap] = segments.add()"
                }
            ]
        },
        "identifiers": {
            "starkware.cairo.common.memcpy.memcpy.len": {
                "full_name": "starkware.cairo.common.memcpy.memcpy.len",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 1,
                            "offset": 0
                        },
                        "value": "[cast(fp + (-3), felt*)]",
                        "pc": 3
                    }
                ],
                "cairo_type": "felt",
                "type": "reference"
            },
            "starkware.cairo.common.memcpy.memcpy.continue_copying": {
                "full_name": "starkware.cairo.common.memcpy.memcpy.continue_copying",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 1,
                            "offset": 3
                        },
                        "value": "[cast(ap, felt*)]",
                        "pc": 10
                    }
                ],
                "cairo_type": "felt",
                "type": "reference"
            },
            "starkware.cairo.common.math.assert_not_zero.value": {
                "full_name": "starkware.cairo.common.math.assert_not_zero.value",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 3,
                            "offset": 0
                        },
                        "value": "[cast(fp + (-3), felt*)]",
                        "pc": 19
                    }
                ],
                "cairo_type": "felt",
                "type": "reference"
            },
            "starkware.cairo.common.math.assert_le_felt.a": {
                "full_name": "starkware.cairo.common.math.assert_le_felt.a",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 4,
                            "offset": 0
                        },
                        "value": "[cast(fp + (-4), felt*)]",
                        "pc": 24
                    }
                ],
                "cairo_type": "felt",
                "type": "reference"
            },
            "starkware.cairo.common.math.assert_le_felt.b": {
                "full_name": "starkware.cairo.common.math.assert_le_felt.b",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 4,
                            "offset": 0
                        },
                        "value": "[cast(fp + (-3), felt*)]",
                        "pc": 24
                    }
                ],
                "cairo_type": "felt",
                "type": "reference"
            },
            "starkware.cairo.common.math.assert_le_felt.range_check_ptr": {
                "full_name": "starkware.cairo.common.math.assert_le_felt.range_check_ptr",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 4,
                            "offset": 0
                        },
                        "value": "[cast(fp + (-5), felt*)]",
                        "pc": 24
                    },
                    {
                        "ap_tracking_data": {
                            "group": 4,
                            "offset": 8
                        },
                        "value": "cast([fp + (-5)] + 4, felt)",
                        "pc": 34
                    }
                ],
                "cairo_type": "felt",
                "type": "reference"
            },
            "starkware.cairo.common.math.assert_lt_felt.a": {
                "full_name": "starkware.cairo.common.math.assert_lt_felt.a",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 5,
                            "offset": 0
                        },
                        "value": "[cast(fp + (-4), felt*)]",
                        "pc": 69
                    }
                ],
                "cairo_type": "felt",
                "type": "reference"
            },
            "starkware.cairo.common.math.assert_lt_felt.b": {
                "full_name": "starkware.cairo.common.math.assert_lt_felt.b",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 5,
                            "offset": 0
                        },
                        "value": "[cast(fp + (-3), felt*)]",
                        "pc": 69
                    }
                ],
                "cairo_type": "felt",
                "type": "reference"
            },
            "starkware.cairo.common.math_cmp.is_le_felt.a": {
                "full_name": "starkware.cairo.common.math_cmp.is_le_felt.a",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 7,
                            "offset": 0
                        },
                        "value": "[cast(fp + (-4), felt*)]",
                        "pc": 86
                    }
                ],
                "cairo_type": "felt",
                "type": "reference"
            },
            "starkware.cairo.common.math_cmp.is_le_felt.b": {
                "full_name": "starkware.cairo.common.math_cmp.is_le_felt.b",
                "references": [
                    {
                        "ap_tracking_data": {
                            "group": 7,
                            "offset": 0
                        },
                        "value": "[cast(fp + (-3), felt*)]",
                        "pc": 86
                    }
                ],
                "cairo_type": "felt",
                "type": "reference"
            },
            "starkware.cairo.common.alloc.alloc": {
                "decorators": [],
                "pc": 0,
                "type": "function"
            },
            "starkware.cairo.common.alloc.alloc.Args": {
                "full_name": "starkware.cairo.common.alloc.alloc.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "starkware.cairo.common.alloc.alloc.ImplicitArgs": {
                "full_name": "starkware.cairo.common.alloc.alloc.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "starkware.cairo.common.alloc.alloc.Return": {
                "cairo_type": "(ptr: felt*)",
                "type": "type_definition"
            },
            "starkware.cairo.common.alloc.alloc.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "starkware.cairo.common.ec_point.EcPoint": {
                "full_name": "starkware.cairo.common.ec_point.EcPoint",
                "members": {
                    "x": {
                        "offset": 0,
                        "cairo_type": "felt"
                    },
                    "y": {
                        "offset": 1,
                        "cairo_type": "felt"
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.cairo.common.keccak_state.KeccakBuiltinState": {
                "full_name": "starkware.cairo.common.keccak_state.KeccakBuiltinState",
                "members": {
                    "s0": {
                        "offset": 0,
                        "cairo_type": "felt"
                    },
                    "s1": {
                        "offset": 1,
                        "cairo_type": "felt"
                    },
                    "s2": {
                        "offset": 2,
                        "cairo_type": "felt"
                    },
                    "s3": {
                        "offset": 3,
                        "cairo_type": "felt"
                    },
                    "s4": {
                        "offset": 4,
                        "cairo_type": "felt"
                    },
                    "s5": {
                        "offset": 5,
                        "cairo_type": "felt"
                    },
                    "s6": {
                        "offset": 6,
                        "cairo_type": "felt"
                    },
                    "s7": {
                        "offset": 7,
                        "cairo_type": "felt"
                    }
                },
                "size": 8,
                "type": "struct"
            },
            "starkware.cairo.common.cairo_builtins.EcPoint": {
                "destination": "starkware.cairo.common.ec_point.EcPoint",
                "type": "alias"
            },
            "starkware.cairo.common.cairo_builtins.KeccakBuiltinState": {
                "destination": "starkware.cairo.common.keccak_state.KeccakBuiltinState",
                "type": "alias"
            },
            "starkware.cairo.common.cairo_builtins.HashBuiltin": {
                "full_name": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "members": {
                    "x": {
                        "offset": 0,
                        "cairo_type": "felt"
                    },
                    "y": {
                        "offset": 1,
                        "cairo_type": "felt"
                    },
                    "result": {
                        "offset": 2,
                        "cairo_type": "felt"
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "starkware.cairo.common.cairo_builtins.SignatureBuiltin": {
                "full_name": "starkware.cairo.common.cairo_builtins.SignatureBuiltin",
                "members": {
                    "pub_key": {
                        "offset": 0,
                        "cairo_type": "felt"
                    },
                    "message": {
                        "offset": 1,
                        "cairo_type": "felt"
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.cairo.common.cairo_builtins.BitwiseBuiltin": {
                "full_name": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin",
                "members": {
                    "x": {
                        "offset": 0,
                        "cairo_type": "felt"
                    },
                    "y": {
                        "offset": 1,
                        "cairo_type": "felt"
                    },
                    "x_and_y": {
                        "offset": 2,
                        "cairo_type": "felt"
                    },
                    "x_xor_y": {
                        "offset": 3,
                        "cairo_type": "felt"
                    },
                    "x_or_y": {
                        "offset": 4,
                        "cairo_type": "felt"
                    }
                },
                "size": 5,
                "type": "struct"
            },
            "starkware.cairo.common.cairo_builtins.EcOpBuiltin": {
                "full_name": "starkware.cairo.common.cairo_builtins.EcOpBuiltin",
                "members": {
                    "p": {
                        "offset": 0,
                        "cairo_type": "starkware.cairo.common.ec_point.EcPoint"
                    },
                    "q": {
                        "offset": 2,
                        "cairo_type": "starkware.cairo.common.ec_point.EcPoint"
                    },
                    "m": {
                        "offset": 4,
                        "cairo_type": "felt"
                    },
                    "r": {
                        "offset": 5,
                        "cairo_type": "starkware.cairo.common.ec_point.EcPoint"
                    }
                },
                "size": 7,
                "type": "struct"
            },
            "starkware.cairo.common.cairo_builtins.KeccakBuiltin": {
                "full_name": "starkware.cairo.common.cairo_builtins.KeccakBuiltin",
                "members": {
                    "input": {
                        "offset": 0,
                        "cairo_type": "starkware.cairo.common.keccak_state.KeccakBuiltinState"
                    },
                    "output": {
                        "offset": 8,
                        "cairo_type": "starkware.cairo.common.keccak_state.KeccakBuiltinState"
                    }
                },
                "size": 16,
                "type": "struct"
            },
            "starkware.cairo.common.hash.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "starkware.cairo.common.memcpy.memcpy": {
                "decorators": [],
                "pc": 3,
                "type": "function"
            },
            "starkware.cairo.common.memcpy.memcpy.Args": {
                "full_name": "starkware.cairo.common.memcpy.memcpy.Args",
                "members": {
                    "dst": {
                        "offset": 0,
                        "cairo_type": "felt*"
                    },
                    "src": {
                        "offset": 1,
                        "cairo_type": "felt*"
                    },
                    "len": {
                        "offset": 2,
                        "cairo_type": "felt"
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "starkware.cairo.common.memcpy.memcpy.ImplicitArgs": {
                "full_name": "starkware.cairo.common.memcpy.memcpy.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "starkware.cairo.common.memcpy.memcpy.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "starkware.cairo.common.memcpy.memcpy.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "starkware.cairo.common.memcpy.memcpy.LoopFrame": {
                "full_name": "starkware.cairo.common.memcpy.memcpy.LoopFrame",
                "members": {
                    "dst": {
                        "offset": 0,
                        "cairo_type": "felt*"
                    },
                    "src": {
                        "offset": 1,
                        "cairo_type": "felt*"
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.cairo.common.memcpy.memcpy.loop": {
                "pc": 8,
                "type": "label"
            },
            "starkware.cairo.lang.compiler.lib.registers.get_fp_and_pc": {
                "decorators": [],
                "pc": 18,
                "type": "function"
            },
            "starkware.cairo.lang.compiler.lib.registers.get_fp_and_pc.Args": {
                "full_name": "starkware.cairo.lang.compiler.lib.registers.get_fp_and_pc.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "starkware.cairo.lang.compiler.lib.registers.get_fp_and_pc.ImplicitArgs": {
                "full_name": "starkware.cairo.lang.compiler.lib.registers.get_fp_and_pc.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "starkware.cairo.lang.compiler.lib.registers.get_fp_and_pc.Return": {
                "cairo_type": "(fp_val: felt*, pc_val: felt*)",
                "type": "type_definition"
            },
            "starkware.cairo.lang.compiler.lib.registers.get_fp_and_pc.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "starkware.cairo.common.bool.FALSE": {
                "value": 0,
                "type": "const"
            },
            "starkware.cairo.common.bool.TRUE": {
                "value": 1,
                "type": "const"
            },
            "starkware.cairo.common.math.FALSE": {
                "destination": "starkware.cairo.common.bool.FALSE",
                "type": "alias"
            },
            "starkware.cairo.common.math.TRUE": {
                "destination": "starkware.cairo.common.bool.TRUE",
                "type": "alias"
            },
            "starkware.cairo.common.math.assert_not_zero": {
                "decorators": [],
                "pc": 19,
                "type": "function"
            },
            "starkware.cairo.common.math.assert_not_zero.Args": {
                "full_name": "starkware.cairo.common.math.assert_not_zero.Args",
                "members": {
                    "value": {
                        "offset": 0,
                        "cairo_type": "felt"
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_not_zero.ImplicitArgs": {
                "full_name": "starkware.cairo.common.math.assert_not_zero.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_not_zero.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "starkware.cairo.common.math.assert_not_zero.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "starkware.cairo.common.math.assert_le_felt": {
                "decorators": [
                    "known_ap_change"
                ],
                "pc": 24,
                "type": "function"
            },
            "starkware.cairo.common.math.assert_le_felt.Args": {
                "full_name": "starkware.cairo.common.math.assert_le_felt.Args",
                "members": {
                    "a": {
                        "offset": 0,
                        "cairo_type": "felt"
                    },
                    "b": {
                        "offset": 1,
                        "cairo_type": "felt"
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_le_felt.ImplicitArgs": {
                "full_name": "starkware.cairo.common.math.assert_le_felt.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "offset": 0,
                        "cairo_type": "felt"
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_le_felt.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "starkware.cairo.common.math.assert_le_felt.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "starkware.cairo.common.math.assert_le_felt.PRIME_OVER_3_HIGH": {
                "value": 3.544607988759776e+36,
                "type": "const"
            },
            "starkware.cairo.common.math.assert_le_felt.PRIME_OVER_2_HIGH": {
                "value": 5.316911983139664e+36,
                "type": "const"
            },
            "starkware.cairo.common.math.assert_le_felt.skip_exclude_a": {
                "pc": 48,
                "type": "label"
            },
            "starkware.cairo.common.math.assert_le_felt.skip_exclude_b_minus_a": {
                "pc": 60,
                "type": "label"
            },
            "starkware.cairo.common.math.assert_lt_felt": {
                "decorators": [
                    "known_ap_change"
                ],
                "pc": 69,
                "type": "function"
            },
            "starkware.cairo.common.math.assert_lt_felt.Args": {
                "full_name": "starkware.cairo.common.math.assert_lt_felt.Args",
                "members": {
                    "a": {
                        "offset": 0,
                        "cairo_type": "felt"
                    },
                    "b": {
                        "offset": 1,
                        "cairo_type": "felt"
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_lt_felt.ImplicitArgs": {
                "full_name": "starkware.cairo.common.math.assert_lt_felt.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "offset": 0,
                        "cairo_type": "felt"
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.math.assert_lt_felt.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "starkware.cairo.common.math.assert_lt_felt.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "starkware.starknet.common.storage.assert_250_bit": {
                "destination": "starkware.cairo.common.math.assert_250_bit",
                "type": "alias"
            },
            "starkware.starknet.common.storage.MAX_STORAGE_ITEM_SIZE": {
                "value": 256,
                "type": "const"
            },
            "starkware.starknet.common.storage.ADDR_BOUND": {
                "value": -1.0671072950157357e+59,
                "type": "const"
            },
            "starkware.cairo.common.dict_access.DictAccess": {
                "full_name": "starkware.cairo.common.dict_access.DictAccess",
                "members": {
                    "key": {
                        "offset": 0,
                        "cairo_type": "felt"
                    },
                    "prev_value": {
                        "offset": 1,
                        "cairo_type": "felt"
                    },
                    "new_value": {
                        "offset": 2,
                        "cairo_type": "felt"
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.DictAccess": {
                "destination": "starkware.cairo.common.dict_access.DictAccess",
                "type": "alias"
            },
            "starkware.starknet.common.syscalls.SEND_MESSAGE_TO_L1_SELECTOR": {
                "value": 4.3301790876830345e+35,
                "type": "const"
            },
            "starkware.starknet.common.syscalls.SendMessageToL1SysCall": {
                "full_name": "starkware.starknet.common.syscalls.SendMessageToL1SysCall",
                "members": {
                    "selector": {
                        "offset": 0,
                        "cairo_type": "felt"
                    },
                    "to_address": {
                        "offset": 1,
                        "cairo_type": "felt"
                    },
                    "payload_size": {
                        "offset": 2,
                        "cairo_type": "felt"
                    },
                    "payload_ptr": {
                        "offset": 3,
                        "cairo_type": "felt*"
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.CALL_CONTRACT_SELECTOR": {
                "value": 2.0853273475220474e+28,
                "type": "const"
            },
            "starkware.starknet.common.syscalls.DELEGATE_CALL_SELECTOR": {
                "value": 2.1167594061783206e+28,
                "type": "const"
            },
            "starkware.starknet.common.syscalls.DELEGATE_L1_HANDLER_SELECTOR": {
                "value": 2.3274015802972845e+40,
                "type": "const"
            },
            "starkware.starknet.common.syscalls.CallContractRequest": {
                "full_name": "starkware.starknet.common.syscalls.CallContractRequest",
                "members": {
                    "selector": {
                        "offset": 0,
                        "cairo_type": "felt"
                    },
                    "contract_address": {
                        "offset": 1,
                        "cairo_type": "felt"
                    },
                    "function_selector": {
                        "offset": 2,
                        "cairo_type": "felt"
                    },
                    "calldata_size": {
                        "offset": 3,
                        "cairo_type": "felt"
                    },
                    "calldata": {
                        "offset": 4,
                        "cairo_type": "felt*"
                    }
                },
                "size": 5,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.CallContractResponse": {
                "full_name": "starkware.starknet.common.syscalls.CallContractResponse",
                "members": {
                    "retdata_size": {
                        "offset": 0,
                        "cairo_type": "felt"
                    },
                    "retdata": {
                        "offset": 1,
                        "cairo_type": "felt*"
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.CallContract": {
                "full_name": "starkware.starknet.common.syscalls.CallContract",
                "members": {
                    "request": {
                        "offset": 0,
                        "cairo_type": "starkware.starknet.common.syscalls.CallContractRequest"
                    },
                    "response": {
                        "offset": 5,
                        "cairo_type": "starkware.starknet.common.syscalls.CallContractResponse"
                    }
                },
                "size": 7,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.LIBRARY_CALL_SELECTOR": {
                "value": 9.2376026794327e+25,
                "type": "const"
            },
            "starkware.starknet.common.syscalls.LIBRARY_CALL_L1_HANDLER_SELECTOR": {
                "value": 4.362334527541981e+47,
                "type": "const"
            },
            "starkware.starknet.common.syscalls.LibraryCallRequest": {
                "full_name": "starkware.starknet.common.syscalls.LibraryCallRequest",
                "members": {
                    "selector": {
                        "offset": 0,
                        "cairo_type": "felt"
                    },
                    "class_hash": {
                        "offset": 1,
                        "cairo_type": "felt"
                    },
                    "function_selector": {
                        "offset": 2,
                        "cairo_type": "felt"
                    },
                    "calldata_size": {
                        "offset": 3,
                        "cairo_type": "felt"
                    },
                    "calldata": {
                        "offset": 4,
                        "cairo_type": "felt*"
                    }
                },
                "size": 5,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.LibraryCall": {
                "full_name": "starkware.starknet.common.syscalls.LibraryCall",
                "members": {
                    "request": {
                        "offset": 0,
                        "cairo_type": "starkware.starknet.common.syscalls.LibraryCallRequest"
                    },
                    "response": {
                        "offset": 5,
                        "cairo_type": "starkware.starknet.common.syscalls.CallContractResponse"
                    }
                },
                "size": 7,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.DEPLOY_SELECTOR": {
                "value": 75202468540281,
                "type": "const"
            },
            "starkware.starknet.common.syscalls.DeployRequest": {
                "full_name": "starkware.starknet.common.syscalls.DeployRequest",
                "members": {
                    "selector": {
                        "offset": 0,
                        "cairo_type": "felt"
                    },
                    "class_hash": {
                        "offset": 1,
                        "cairo_type": "felt"
                    },
                    "contract_address_salt": {
                        "offset": 2,
                        "cairo_type": "felt"
                    },
                    "constructor_calldata_size": {
                        "offset": 3,
                        "cairo_type": "felt"
                    },
                    "constructor_calldata": {
                        "offset": 4,
                        "cairo_type": "felt*"
                    },
                    "deploy_from_zero": {
                        "offset": 5,
                        "cairo_type": "felt"
                    }
                },
                "size": 6,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.DeployResponse": {
                "full_name": "starkware.starknet.common.syscalls.DeployResponse",
                "members": {
                    "contract_address": {
                        "offset": 0,
                        "cairo_type": "felt"
                    },
                    "constructor_retdata_size": {
                        "offset": 1,
                        "cairo_type": "felt"
                    },
                    "constructor_retdata": {
                        "offset": 2,
                        "cairo_type": "felt*"
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.Deploy": {
                "full_name": "starkware.starknet.common.syscalls.Deploy",
                "members": {
                    "request": {
                        "offset": 0,
                        "cairo_type": "starkware.starknet.common.syscalls.DeployRequest"
                    },
                    "response": {
                        "offset": 6,
                        "cairo_type": "starkware.starknet.common.syscalls.DeployResponse"
                    }
                },
                "size": 9,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GET_CALLER_ADDRESS_SELECTOR": {
                "value": 9.490196778139308e+37,
                "type": "const"
            },
            "starkware.starknet.common.syscalls.GetCallerAddressRequest": {
                "full_name": "starkware.starknet.common.syscalls.GetCallerAddressRequest",
                "members": {
                    "selector": {
                        "offset": 0,
                        "cairo_type": "felt"
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetCallerAddressResponse": {
                "full_name": "starkware.starknet.common.syscalls.GetCallerAddressResponse",
                "members": {
                    "caller_address": {
                        "offset": 0,
                        "cairo_type": "felt"
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetCallerAddress": {
                "full_name": "starkware.starknet.common.syscalls.GetCallerAddress",
                "members": {
                    "request": {
                        "offset": 0,
                        "cairo_type": "starkware.starknet.common.syscalls.GetCallerAddressRequest"
                    },
                    "response": {
                        "offset": 1,
                        "cairo_type": "starkware.starknet.common.syscalls.GetCallerAddressResponse"
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GET_SEQUENCER_ADDRESS_SELECTOR": {
                "value": 1.5921908335819916e+45,
                "type": "const"
            },
            "starkware.starknet.common.syscalls.GetSequencerAddressRequest": {
                "full_name": "starkware.starknet.common.syscalls.GetSequencerAddressRequest",
                "members": {
                    "selector": {
                        "offset": 0,
                        "cairo_type": "felt"
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetSequencerAddressResponse": {
                "full_name": "starkware.starknet.common.syscalls.GetSequencerAddressResponse",
                "members": {
                    "sequencer_address": {
                        "offset": 0,
                        "cairo_type": "felt"
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetSequencerAddress": {
                "full_name": "starkware.starknet.common.syscalls.GetSequencerAddress",
                "members": {
                    "request": {
                        "offset": 0,
                        "cairo_type": "starkware.starknet.common.syscalls.GetSequencerAddressRequest"
                    },
                    "response": {
                        "offset": 1,
                        "cairo_type": "starkware.starknet.common.syscalls.GetSequencerAddressResponse"
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GET_BLOCK_NUMBER_SELECTOR": {
                "value": 1.448089106835523e+33,
                "type": "const"
            },
            "starkware.starknet.common.syscalls.GetBlockNumberRequest": {
                "full_name": "starkware.starknet.common.syscalls.GetBlockNumberRequest",
                "members": {
                    "selector": {
                        "offset": 0,
                        "cairo_type": "felt"
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetBlockNumberResponse": {
                "full_name": "starkware.starknet.common.syscalls.GetBlockNumberResponse",
                "members": {
                    "block_number": {
                        "offset": 0,
                        "cairo_type": "felt"
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetBlockNumber": {
                "full_name": "starkware.starknet.common.syscalls.GetBlockNumber",
                "members": {
                    "request": {
                        "offset": 0,
                        "cairo_type": "starkware.starknet.common.syscalls.GetBlockNumberRequest"
                    },
                    "response": {
                        "offset": 1,
                        "cairo_type": "starkware.starknet.common.syscalls.GetBlockNumberResponse"
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GET_CONTRACT_ADDRESS_SELECTOR": {
                "value": 6.219495360805491e+42,
                "type": "const"
            },
            "starkware.starknet.common.syscalls.GetContractAddressRequest": {
                "full_name": "starkware.starknet.common.syscalls.GetContractAddressRequest",
                "members": {
                    "selector": {
                        "offset": 0,
                        "cairo_type": "felt"
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetContractAddressResponse": {
                "full_name": "starkware.starknet.common.syscalls.GetContractAddressResponse",
                "members": {
                    "contract_address": {
                        "offset": 0,
                        "cairo_type": "felt"
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetContractAddress": {
                "full_name": "starkware.starknet.common.syscalls.GetContractAddress",
                "members": {
                    "request": {
                        "offset": 0,
                        "cairo_type": "starkware.starknet.common.syscalls.GetContractAddressRequest"
                    },
                    "response": {
                        "offset": 1,
                        "cairo_type": "starkware.starknet.common.syscalls.GetContractAddressResponse"
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GET_BLOCK_TIMESTAMP_SELECTOR": {
                "value": 2.4294903732626647e+40,
                "type": "const"
            },
            "starkware.starknet.common.syscalls.GetBlockTimestampRequest": {
                "full_name": "starkware.starknet.common.syscalls.GetBlockTimestampRequest",
                "members": {
                    "selector": {
                        "offset": 0,
                        "cairo_type": "felt"
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetBlockTimestampResponse": {
                "full_name": "starkware.starknet.common.syscalls.GetBlockTimestampResponse",
                "members": {
                    "block_timestamp": {
                        "offset": 0,
                        "cairo_type": "felt"
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetBlockTimestamp": {
                "full_name": "starkware.starknet.common.syscalls.GetBlockTimestamp",
                "members": {
                    "request": {
                        "offset": 0,
                        "cairo_type": "starkware.starknet.common.syscalls.GetBlockTimestampRequest"
                    },
                    "response": {
                        "offset": 1,
                        "cairo_type": "starkware.starknet.common.syscalls.GetBlockTimestampResponse"
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GET_TX_SIGNATURE_SELECTOR": {
                "value": 1.44808912865234e+33,
                "type": "const"
            },
            "starkware.starknet.common.syscalls.GetTxSignatureRequest": {
                "full_name": "starkware.starknet.common.syscalls.GetTxSignatureRequest",
                "members": {
                    "selector": {
                        "offset": 0,
                        "cairo_type": "felt"
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetTxSignatureResponse": {
                "full_name": "starkware.starknet.common.syscalls.GetTxSignatureResponse",
                "members": {
                    "signature_len": {
                        "offset": 0,
                        "cairo_type": "felt"
                    },
                    "signature": {
                        "offset": 1,
                        "cairo_type": "felt*"
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetTxSignature": {
                "full_name": "starkware.starknet.common.syscalls.GetTxSignature",
                "members": {
                    "request": {
                        "offset": 0,
                        "cairo_type": "starkware.starknet.common.syscalls.GetTxSignatureRequest"
                    },
                    "response": {
                        "offset": 1,
                        "cairo_type": "starkware.starknet.common.syscalls.GetTxSignatureResponse"
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.STORAGE_READ_SELECTOR": {
                "value": 1.0089069337060175e+26,
                "type": "const"
            },
            "starkware.starknet.common.syscalls.StorageReadRequest": {
                "full_name": "starkware.starknet.common.syscalls.StorageReadRequest",
                "members": {
                    "selector": {
                        "offset": 0,
                        "cairo_type": "felt"
                    },
                    "address": {
                        "offset": 1,
                        "cairo_type": "felt"
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.StorageReadResponse": {
                "full_name": "starkware.starknet.common.syscalls.StorageReadResponse",
                "members": {
                    "value": {
                        "offset": 0,
                        "cairo_type": "felt"
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.StorageRead": {
                "full_name": "starkware.starknet.common.syscalls.StorageRead",
                "members": {
                    "request": {
                        "offset": 0,
                        "cairo_type": "starkware.starknet.common.syscalls.StorageReadRequest"
                    },
                    "response": {
                        "offset": 2,
                        "cairo_type": "starkware.starknet.common.syscalls.StorageReadResponse"
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.STORAGE_WRITE_SELECTOR": {
                "value": 2.582801750287405e+28,
                "type": "const"
            },
            "starkware.starknet.common.syscalls.StorageWrite": {
                "full_name": "starkware.starknet.common.syscalls.StorageWrite",
                "members": {
                    "selector": {
                        "offset": 0,
                        "cairo_type": "felt"
                    },
                    "address": {
                        "offset": 1,
                        "cairo_type": "felt"
                    },
                    "value": {
                        "offset": 2,
                        "cairo_type": "felt"
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.EMIT_EVENT_SELECTOR": {
                "value": 1.2807093015503357e+21,
                "type": "const"
            },
            "starkware.starknet.common.syscalls.EmitEvent": {
                "full_name": "starkware.starknet.common.syscalls.EmitEvent",
                "members": {
                    "selector": {
                        "offset": 0,
                        "cairo_type": "felt"
                    },
                    "keys_len": {
                        "offset": 1,
                        "cairo_type": "felt"
                    },
                    "keys": {
                        "offset": 2,
                        "cairo_type": "felt*"
                    },
                    "data_len": {
                        "offset": 3,
                        "cairo_type": "felt"
                    },
                    "data": {
                        "offset": 4,
                        "cairo_type": "felt*"
                    }
                },
                "size": 5,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.TxInfo": {
                "full_name": "starkware.starknet.common.syscalls.TxInfo",
                "members": {
                    "version": {
                        "offset": 0,
                        "cairo_type": "felt"
                    },
                    "account_contract_address": {
                        "offset": 1,
                        "cairo_type": "felt"
                    },
                    "max_fee": {
                        "offset": 2,
                        "cairo_type": "felt"
                    },
                    "signature_len": {
                        "offset": 3,
                        "cairo_type": "felt"
                    },
                    "signature": {
                        "offset": 4,
                        "cairo_type": "felt*"
                    },
                    "transaction_hash": {
                        "offset": 5,
                        "cairo_type": "felt"
                    },
                    "chain_id": {
                        "offset": 6,
                        "cairo_type": "felt"
                    },
                    "nonce": {
                        "offset": 7,
                        "cairo_type": "felt"
                    }
                },
                "size": 8,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GET_TX_INFO_SELECTOR": {
                "value": 1.3170293902041122e+21,
                "type": "const"
            },
            "starkware.starknet.common.syscalls.GetTxInfoRequest": {
                "full_name": "starkware.starknet.common.syscalls.GetTxInfoRequest",
                "members": {
                    "selector": {
                        "offset": 0,
                        "cairo_type": "felt"
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetTxInfoResponse": {
                "full_name": "starkware.starknet.common.syscalls.GetTxInfoResponse",
                "members": {
                    "tx_info": {
                        "offset": 0,
                        "cairo_type": "starkware.starknet.common.syscalls.TxInfo*"
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.starknet.common.syscalls.GetTxInfo": {
                "full_name": "starkware.starknet.common.syscalls.GetTxInfo",
                "members": {
                    "request": {
                        "offset": 0,
                        "cairo_type": "starkware.starknet.common.syscalls.GetTxInfoRequest"
                    },
                    "response": {
                        "offset": 1,
                        "cairo_type": "starkware.starknet.common.syscalls.GetTxInfoResponse"
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.cairo.common.registers.get_ap": {
                "destination": "starkware.cairo.lang.compiler.lib.registers.get_ap",
                "type": "alias"
            },
            "starkware.cairo.common.registers.get_fp_and_pc": {
                "destination": "starkware.cairo.lang.compiler.lib.registers.get_fp_and_pc",
                "type": "alias"
            },
            "starkware.cairo.common.registers.get_label_location": {
                "decorators": [],
                "pc": 80,
                "type": "function"
            },
            "starkware.cairo.common.registers.get_label_location.Args": {
                "full_name": "starkware.cairo.common.registers.get_label_location.Args",
                "members": {
                    "label_value": {
                        "offset": 0,
                        "cairo_type": "codeoffset"
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.registers.get_label_location.ImplicitArgs": {
                "full_name": "starkware.cairo.common.registers.get_label_location.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "starkware.cairo.common.registers.get_label_location.Return": {
                "cairo_type": "(res: felt*)",
                "type": "type_definition"
            },
            "starkware.cairo.common.registers.get_label_location.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "starkware.cairo.common.registers.get_label_location.ret_pc_label": {
                "pc": 82,
                "type": "label"
            },
            "starkware.cairo.common.math_cmp.assert_le_felt": {
                "destination": "starkware.cairo.common.math.assert_le_felt",
                "type": "alias"
            },
            "starkware.cairo.common.math_cmp.assert_lt_felt": {
                "destination": "starkware.cairo.common.math.assert_lt_felt",
                "type": "alias"
            },
            "starkware.cairo.common.math_cmp.RC_BOUND": {
                "value": 3.402823669209385e+38,
                "type": "const"
            },
            "starkware.cairo.common.math_cmp.is_le_felt": {
                "decorators": [
                    "known_ap_change"
                ],
                "pc": 86,
                "type": "function"
            },
            "starkware.cairo.common.math_cmp.is_le_felt.Args": {
                "full_name": "starkware.cairo.common.math_cmp.is_le_felt.Args",
                "members": {
                    "a": {
                        "offset": 0,
                        "cairo_type": "felt"
                    },
                    "b": {
                        "offset": 1,
                        "cairo_type": "felt"
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.cairo.common.math_cmp.is_le_felt.ImplicitArgs": {
                "full_name": "starkware.cairo.common.math_cmp.is_le_felt.ImplicitArgs",
                "members": {
                    "range_check_ptr": {
                        "offset": 0,
                        "cairo_type": "felt"
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.math_cmp.is_le_felt.Return": {
                "cairo_type": "felt",
                "type": "type_definition"
            },
            "starkware.cairo.common.math_cmp.is_le_felt.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "starkware.cairo.common.math_cmp.is_le_felt.not_le": {
                "pc": 98,
                "type": "label"
            },
            "starkware.cairo.common.bitwise.BitwiseBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin",
                "type": "alias"
            },
            "starkware.cairo.common.bitwise.ALL_ONES": {
                "value": -1.0671072950157357e+59,
                "type": "const"
            },
            "starkware.cairo.common.bitwise.bitwise_and": {
                "decorators": [],
                "pc": 106,
                "type": "function"
            },
            "starkware.cairo.common.bitwise.bitwise_and.Args": {
                "full_name": "starkware.cairo.common.bitwise.bitwise_and.Args",
                "members": {
                    "x": {
                        "offset": 0,
                        "cairo_type": "felt"
                    },
                    "y": {
                        "offset": 1,
                        "cairo_type": "felt"
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "starkware.cairo.common.bitwise.bitwise_and.ImplicitArgs": {
                "full_name": "starkware.cairo.common.bitwise.bitwise_and.ImplicitArgs",
                "members": {
                    "bitwise_ptr": {
                        "offset": 0,
                        "cairo_type": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin*"
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "starkware.cairo.common.bitwise.bitwise_and.Return": {
                "cairo_type": "(x_and_y: felt)",
                "type": "type_definition"
            },
            "starkware.cairo.common.bitwise.bitwise_and.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "contracts.types.FTSpec": {
                "full_name": "contracts.types.FTSpec",
                "members": {
                    "token_id": {
                        "offset": 0,
                        "cairo_type": "felt"
                    },
                    "qty": {
                        "offset": 1,
                        "cairo_type": "felt"
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.types.NFTSpec": {
                "full_name": "contracts.types.NFTSpec",
                "members": {
                    "material": {
                        "offset": 0,
                        "cairo_type": "felt"
                    },
                    "token_id": {
                        "offset": 1,
                        "cairo_type": "felt"
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.types.BalanceSpec": {
                "full_name": "contracts.types.BalanceSpec",
                "members": {
                    "material": {
                        "offset": 0,
                        "cairo_type": "felt"
                    },
                    "balance": {
                        "offset": 1,
                        "cairo_type": "felt"
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.types.ShapeItem": {
                "full_name": "contracts.types.ShapeItem",
                "members": {
                    "color_nft_material": {
                        "offset": 0,
                        "cairo_type": "felt"
                    },
                    "x_y_z": {
                        "offset": 1,
                        "cairo_type": "felt"
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.ecosystem.genesis_collection.GENESIS_COLLECTION": {
                "value": 1,
                "type": "const"
            },
            "contracts.ecosystem.genesis_collection.DUCKS_COLLECTION": {
                "value": 3,
                "type": "const"
            },
            "contracts.shape.construction_guards.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "contracts.shape.construction_guards.SignatureBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.SignatureBuiltin",
                "type": "alias"
            },
            "contracts.shape.construction_guards.BitwiseBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin",
                "type": "alias"
            },
            "contracts.shape.construction_guards.assert_le_felt": {
                "destination": "starkware.cairo.common.math.assert_le_felt",
                "type": "alias"
            },
            "contracts.shape.construction_guards.assert_lt_felt": {
                "destination": "starkware.cairo.common.math.assert_lt_felt",
                "type": "alias"
            },
            "contracts.shape.construction_guards.assert_not_zero": {
                "destination": "starkware.cairo.common.math.assert_not_zero",
                "type": "alias"
            },
            "contracts.shape.construction_guards.bitwise_and": {
                "destination": "starkware.cairo.common.bitwise.bitwise_and",
                "type": "alias"
            },
            "contracts.shape.construction_guards.ShapeItem": {
                "destination": "contracts.types.ShapeItem",
                "type": "alias"
            },
            "contracts.shape.construction_guards._check_properly_sorted": {
                "decorators": [
                    "view"
                ],
                "pc": 112,
                "type": "function"
            },
            "contracts.shape.construction_guards._check_properly_sorted.Args": {
                "full_name": "contracts.shape.construction_guards._check_properly_sorted.Args",
                "members": {
                    "shape_len": {
                        "offset": 0,
                        "cairo_type": "felt"
                    },
                    "shape": {
                        "offset": 1,
                        "cairo_type": "contracts.types.ShapeItem*"
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.shape.construction_guards._check_properly_sorted.ImplicitArgs": {
                "full_name": "contracts.shape.construction_guards._check_properly_sorted.ImplicitArgs",
                "members": {
                    "syscall_ptr": {
                        "offset": 0,
                        "cairo_type": "felt*"
                    },
                    "pedersen_ptr": {
                        "offset": 1,
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*"
                    },
                    "bitwise_ptr": {
                        "offset": 2,
                        "cairo_type": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin*"
                    },
                    "range_check_ptr": {
                        "offset": 3,
                        "cairo_type": "felt"
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "contracts.shape.construction_guards._check_properly_sorted.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.shape.construction_guards._check_properly_sorted.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "contracts.shape.construction_guards._check_properly_sorted_impl": {
                "decorators": [],
                "pc": 159,
                "type": "function"
            },
            "contracts.shape.construction_guards._check_properly_sorted_impl.Args": {
                "full_name": "contracts.shape.construction_guards._check_properly_sorted_impl.Args",
                "members": {
                    "shape_len": {
                        "offset": 0,
                        "cairo_type": "felt"
                    },
                    "shape": {
                        "offset": 1,
                        "cairo_type": "contracts.types.ShapeItem*"
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.shape.construction_guards._check_properly_sorted_impl.ImplicitArgs": {
                "full_name": "contracts.shape.construction_guards._check_properly_sorted_impl.ImplicitArgs",
                "members": {
                    "syscall_ptr": {
                        "offset": 0,
                        "cairo_type": "felt*"
                    },
                    "pedersen_ptr": {
                        "offset": 1,
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*"
                    },
                    "bitwise_ptr": {
                        "offset": 2,
                        "cairo_type": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin*"
                    },
                    "range_check_ptr": {
                        "offset": 3,
                        "cairo_type": "felt"
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "contracts.shape.construction_guards._check_properly_sorted_impl.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.shape.construction_guards._check_properly_sorted_impl.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "contracts.shape.construction_guards._check_for_duplicates": {
                "decorators": [
                    "view"
                ],
                "pc": 184,
                "type": "function"
            },
            "contracts.shape.construction_guards._check_for_duplicates.Args": {
                "full_name": "contracts.shape.construction_guards._check_for_duplicates.Args",
                "members": {
                    "shape_len": {
                        "offset": 0,
                        "cairo_type": "felt"
                    },
                    "shape": {
                        "offset": 1,
                        "cairo_type": "contracts.types.ShapeItem*"
                    },
                    "nfts_len": {
                        "offset": 2,
                        "cairo_type": "felt"
                    },
                    "nfts": {
                        "offset": 3,
                        "cairo_type": "felt*"
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "contracts.shape.construction_guards._check_for_duplicates.ImplicitArgs": {
                "full_name": "contracts.shape.construction_guards._check_for_duplicates.ImplicitArgs",
                "members": {
                    "syscall_ptr": {
                        "offset": 0,
                        "cairo_type": "felt*"
                    },
                    "pedersen_ptr": {
                        "offset": 1,
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*"
                    },
                    "bitwise_ptr": {
                        "offset": 2,
                        "cairo_type": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin*"
                    },
                    "range_check_ptr": {
                        "offset": 3,
                        "cairo_type": "felt"
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "contracts.shape.construction_guards._check_for_duplicates.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.shape.construction_guards._check_for_duplicates.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "contracts.shape.construction_guards._check_for_duplicates_shape_impl": {
                "decorators": [],
                "pc": 250,
                "type": "function"
            },
            "contracts.shape.construction_guards._check_for_duplicates_shape_impl.Args": {
                "full_name": "contracts.shape.construction_guards._check_for_duplicates_shape_impl.Args",
                "members": {
                    "shape_len": {
                        "offset": 0,
                        "cairo_type": "felt"
                    },
                    "shape": {
                        "offset": 1,
                        "cairo_type": "contracts.types.ShapeItem*"
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.shape.construction_guards._check_for_duplicates_shape_impl.ImplicitArgs": {
                "full_name": "contracts.shape.construction_guards._check_for_duplicates_shape_impl.ImplicitArgs",
                "members": {
                    "syscall_ptr": {
                        "offset": 0,
                        "cairo_type": "felt*"
                    },
                    "pedersen_ptr": {
                        "offset": 1,
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*"
                    },
                    "bitwise_ptr": {
                        "offset": 2,
                        "cairo_type": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin*"
                    },
                    "range_check_ptr": {
                        "offset": 3,
                        "cairo_type": "felt"
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "contracts.shape.construction_guards._check_for_duplicates_shape_impl.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.shape.construction_guards._check_for_duplicates_shape_impl.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "contracts.shape.construction_guards._check_for_duplicates_nfts_impl": {
                "decorators": [],
                "pc": 279,
                "type": "function"
            },
            "contracts.shape.construction_guards._check_for_duplicates_nfts_impl.Args": {
                "full_name": "contracts.shape.construction_guards._check_for_duplicates_nfts_impl.Args",
                "members": {
                    "nfts_len": {
                        "offset": 0,
                        "cairo_type": "felt"
                    },
                    "nfts": {
                        "offset": 1,
                        "cairo_type": "felt*"
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "contracts.shape.construction_guards._check_for_duplicates_nfts_impl.ImplicitArgs": {
                "full_name": "contracts.shape.construction_guards._check_for_duplicates_nfts_impl.ImplicitArgs",
                "members": {
                    "syscall_ptr": {
                        "offset": 0,
                        "cairo_type": "felt*"
                    },
                    "pedersen_ptr": {
                        "offset": 1,
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*"
                    },
                    "bitwise_ptr": {
                        "offset": 2,
                        "cairo_type": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin*"
                    },
                    "range_check_ptr": {
                        "offset": 3,
                        "cairo_type": "felt"
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "contracts.shape.construction_guards._check_for_duplicates_nfts_impl.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.shape.construction_guards._check_for_duplicates_nfts_impl.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "contracts.shape.construction_guards._check_for_nft": {
                "decorators": [],
                "pc": 306,
                "type": "function"
            },
            "contracts.shape.construction_guards._check_for_nft.Args": {
                "full_name": "contracts.shape.construction_guards._check_for_nft.Args",
                "members": {
                    "comp_to": {
                        "offset": 0,
                        "cairo_type": "felt"
                    },
                    "nfts_len": {
                        "offset": 1,
                        "cairo_type": "felt"
                    },
                    "nfts": {
                        "offset": 2,
                        "cairo_type": "felt*"
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "contracts.shape.construction_guards._check_for_nft.ImplicitArgs": {
                "full_name": "contracts.shape.construction_guards._check_for_nft.ImplicitArgs",
                "members": {
                    "syscall_ptr": {
                        "offset": 0,
                        "cairo_type": "felt*"
                    },
                    "pedersen_ptr": {
                        "offset": 1,
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*"
                    },
                    "bitwise_ptr": {
                        "offset": 2,
                        "cairo_type": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin*"
                    },
                    "range_check_ptr": {
                        "offset": 3,
                        "cairo_type": "felt"
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "contracts.shape.construction_guards._check_for_nft.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.shape.construction_guards._check_for_nft.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "contracts.shape.construction_guards.is_le_felt": {
                "destination": "starkware.cairo.common.math_cmp.is_le_felt",
                "type": "alias"
            },
            "contracts.shape.construction_guards._check_nfts_ok": {
                "decorators": [
                    "view"
                ],
                "pc": 329,
                "type": "function"
            },
            "contracts.shape.construction_guards._check_nfts_ok.Args": {
                "full_name": "contracts.shape.construction_guards._check_nfts_ok.Args",
                "members": {
                    "shape_len": {
                        "offset": 0,
                        "cairo_type": "felt"
                    },
                    "shape": {
                        "offset": 1,
                        "cairo_type": "contracts.types.ShapeItem*"
                    },
                    "nfts_len": {
                        "offset": 2,
                        "cairo_type": "felt"
                    },
                    "nfts": {
                        "offset": 3,
                        "cairo_type": "felt*"
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "contracts.shape.construction_guards._check_nfts_ok.ImplicitArgs": {
                "full_name": "contracts.shape.construction_guards._check_nfts_ok.ImplicitArgs",
                "members": {
                    "syscall_ptr": {
                        "offset": 0,
                        "cairo_type": "felt*"
                    },
                    "pedersen_ptr": {
                        "offset": 1,
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*"
                    },
                    "bitwise_ptr": {
                        "offset": 2,
                        "cairo_type": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin*"
                    },
                    "range_check_ptr": {
                        "offset": 3,
                        "cairo_type": "felt"
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "contracts.shape.construction_guards._check_nfts_ok.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "contracts.shape.construction_guards._check_nfts_ok.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "contracts.shape.data_ducks.INDEX_START": {
                "value": 1,
                "type": "const"
            },
            "contracts.shape.data_ducks.shape_offset_cumulative": {
                "pc": 437,
                "type": "label"
            },
            "contracts.shape.data_ducks.shape_offset_cumulative_end": {
                "pc": 439,
                "type": "label"
            },
            "contracts.shape.data_ducks.shape_data": {
                "pc": 439,
                "type": "label"
            },
            "contracts.shape.data_ducks.shape_data_end": {
                "pc": 501,
                "type": "label"
            },
            "contracts.shape.data_ducks.nft_offset_cumulative": {
                "pc": 501,
                "type": "label"
            },
            "contracts.shape.data_ducks.nft_offset_cumulative_end": {
                "pc": 503,
                "type": "label"
            },
            "contracts.shape.data_ducks.nft_data": {
                "pc": 503,
                "type": "label"
            },
            "contracts.shape.data_ducks.nft_data_end": {
                "pc": 503,
                "type": "label"
            },
            "__main__.HashBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
                "type": "alias"
            },
            "__main__.SignatureBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.SignatureBuiltin",
                "type": "alias"
            },
            "__main__.BitwiseBuiltin": {
                "destination": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin",
                "type": "alias"
            },
            "__main__.get_label_location": {
                "destination": "starkware.cairo.common.registers.get_label_location",
                "type": "alias"
            },
            "__main__.assert_le_felt": {
                "destination": "starkware.cairo.common.math.assert_le_felt",
                "type": "alias"
            },
            "__main__.assert_not_zero": {
                "destination": "starkware.cairo.common.math.assert_not_zero",
                "type": "alias"
            },
            "__main__.is_le_felt": {
                "destination": "starkware.cairo.common.math_cmp.is_le_felt",
                "type": "alias"
            },
            "__main__.alloc": {
                "destination": "starkware.cairo.common.alloc.alloc",
                "type": "alias"
            },
            "__main__.bitwise_and": {
                "destination": "starkware.cairo.common.bitwise.bitwise_and",
                "type": "alias"
            },
            "__main__.ShapeItem": {
                "destination": "contracts.types.ShapeItem",
                "type": "alias"
            },
            "__main__.FTSpec": {
                "destination": "contracts.types.FTSpec",
                "type": "alias"
            },
            "__main__.DUCKS_COLLECTION": {
                "destination": "contracts.ecosystem.genesis_collection.DUCKS_COLLECTION",
                "type": "alias"
            },
            "__main__._check_properly_sorted": {
                "destination": "contracts.shape.construction_guards._check_properly_sorted",
                "type": "alias"
            },
            "__main__._check_for_duplicates": {
                "destination": "contracts.shape.construction_guards._check_for_duplicates",
                "type": "alias"
            },
            "__main__._check_nfts_ok": {
                "destination": "contracts.shape.construction_guards._check_nfts_ok",
                "type": "alias"
            },
            "__main__.shape_offset_cumulative": {
                "destination": "contracts.shape.data_ducks.shape_offset_cumulative",
                "type": "alias"
            },
            "__main__.shape_offset_cumulative_end": {
                "destination": "contracts.shape.data_ducks.shape_offset_cumulative_end",
                "type": "alias"
            },
            "__main__.shape_data": {
                "destination": "contracts.shape.data_ducks.shape_data",
                "type": "alias"
            },
            "__main__.shape_data_end": {
                "destination": "contracts.shape.data_ducks.shape_data_end",
                "type": "alias"
            },
            "__main__.nft_offset_cumulative": {
                "destination": "contracts.shape.data_ducks.nft_offset_cumulative",
                "type": "alias"
            },
            "__main__.nft_offset_cumulative_end": {
                "destination": "contracts.shape.data_ducks.nft_offset_cumulative_end",
                "type": "alias"
            },
            "__main__.nft_data": {
                "destination": "contracts.shape.data_ducks.nft_data",
                "type": "alias"
            },
            "__main__.nft_data_end": {
                "destination": "contracts.shape.data_ducks.nft_data_end",
                "type": "alias"
            },
            "__main__.ANY_MATERIAL_ANY_COLOR": {
                "value": 0,
                "type": "const"
            },
            "__main__.UncompressedShapeItem": {
                "full_name": "__main__.UncompressedShapeItem",
                "members": {
                    "material": {
                        "offset": 0,
                        "cairo_type": "felt"
                    },
                    "color": {
                        "offset": 1,
                        "cairo_type": "felt"
                    },
                    "x": {
                        "offset": 2,
                        "cairo_type": "felt"
                    },
                    "y": {
                        "offset": 3,
                        "cairo_type": "felt"
                    },
                    "z": {
                        "offset": 4,
                        "cairo_type": "felt"
                    },
                    "nft_token_id": {
                        "offset": 5,
                        "cairo_type": "felt"
                    }
                },
                "size": 6,
                "type": "struct"
            },
            "__main__._get_nb_shapes": {
                "decorators": [],
                "pc": 503,
                "type": "function"
            },
            "__main__._get_nb_shapes.Args": {
                "full_name": "__main__._get_nb_shapes.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__._get_nb_shapes.ImplicitArgs": {
                "full_name": "__main__._get_nb_shapes.ImplicitArgs",
                "members": {
                    "syscall_ptr": {
                        "offset": 0,
                        "cairo_type": "felt*"
                    },
                    "pedersen_ptr": {
                        "offset": 1,
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*"
                    },
                    "bitwise_ptr": {
                        "offset": 2,
                        "cairo_type": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin*"
                    },
                    "range_check_ptr": {
                        "offset": 3,
                        "cairo_type": "felt"
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "__main__._get_nb_shapes.Return": {
                "cairo_type": "felt",
                "type": "type_definition"
            },
            "__main__._get_nb_shapes.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "__main__._get_shape_offsets": {
                "decorators": [],
                "pc": 519,
                "type": "function"
            },
            "__main__._get_shape_offsets.Args": {
                "full_name": "__main__._get_shape_offsets.Args",
                "members": {
                    "i": {
                        "offset": 0,
                        "cairo_type": "felt"
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "__main__._get_shape_offsets.ImplicitArgs": {
                "full_name": "__main__._get_shape_offsets.ImplicitArgs",
                "members": {
                    "syscall_ptr": {
                        "offset": 0,
                        "cairo_type": "felt*"
                    },
                    "pedersen_ptr": {
                        "offset": 1,
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*"
                    },
                    "bitwise_ptr": {
                        "offset": 2,
                        "cairo_type": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin*"
                    },
                    "range_check_ptr": {
                        "offset": 3,
                        "cairo_type": "felt"
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "__main__._get_shape_offsets.Return": {
                "cairo_type": "(start: felt*, end: felt*)",
                "type": "type_definition"
            },
            "__main__._get_shape_offsets.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "__main__._get_nft_offsets": {
                "decorators": [],
                "pc": 544,
                "type": "function"
            },
            "__main__._get_nft_offsets.Args": {
                "full_name": "__main__._get_nft_offsets.Args",
                "members": {
                    "i": {
                        "offset": 0,
                        "cairo_type": "felt"
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "__main__._get_nft_offsets.ImplicitArgs": {
                "full_name": "__main__._get_nft_offsets.ImplicitArgs",
                "members": {
                    "syscall_ptr": {
                        "offset": 0,
                        "cairo_type": "felt*"
                    },
                    "pedersen_ptr": {
                        "offset": 1,
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*"
                    },
                    "bitwise_ptr": {
                        "offset": 2,
                        "cairo_type": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin*"
                    },
                    "range_check_ptr": {
                        "offset": 3,
                        "cairo_type": "felt"
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "__main__._get_nft_offsets.Return": {
                "cairo_type": "(start: felt*, end: felt*)",
                "type": "type_definition"
            },
            "__main__._get_nft_offsets.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "__main__.constructor": {
                "decorators": [
                    "constructor"
                ],
                "pc": 565,
                "type": "function"
            },
            "__main__.constructor.Args": {
                "full_name": "__main__.constructor.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.constructor.ImplicitArgs": {
                "full_name": "__main__.constructor.ImplicitArgs",
                "members": {
                    "syscall_ptr": {
                        "offset": 0,
                        "cairo_type": "felt*"
                    },
                    "pedersen_ptr": {
                        "offset": 1,
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*"
                    },
                    "bitwise_ptr": {
                        "offset": 2,
                        "cairo_type": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin*"
                    },
                    "range_check_ptr": {
                        "offset": 3,
                        "cairo_type": "felt"
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "__main__.constructor.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__.constructor.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "__main__._validate_nth_shape": {
                "decorators": [],
                "pc": 591,
                "type": "function"
            },
            "__main__._validate_nth_shape.Args": {
                "full_name": "__main__._validate_nth_shape.Args",
                "members": {
                    "n": {
                        "offset": 0,
                        "cairo_type": "felt"
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "__main__._validate_nth_shape.ImplicitArgs": {
                "full_name": "__main__._validate_nth_shape.ImplicitArgs",
                "members": {
                    "syscall_ptr": {
                        "offset": 0,
                        "cairo_type": "felt*"
                    },
                    "pedersen_ptr": {
                        "offset": 1,
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*"
                    },
                    "bitwise_ptr": {
                        "offset": 2,
                        "cairo_type": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin*"
                    },
                    "range_check_ptr": {
                        "offset": 3,
                        "cairo_type": "felt"
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "__main__._validate_nth_shape.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__._validate_nth_shape.SIZEOF_LOCALS": {
                "value": 4,
                "type": "const"
            },
            "__main__._shape": {
                "decorators": [],
                "pc": 637,
                "type": "function"
            },
            "__main__._shape.Args": {
                "full_name": "__main__._shape.Args",
                "members": {
                    "i": {
                        "offset": 0,
                        "cairo_type": "felt"
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "__main__._shape.ImplicitArgs": {
                "full_name": "__main__._shape.ImplicitArgs",
                "members": {
                    "syscall_ptr": {
                        "offset": 0,
                        "cairo_type": "felt*"
                    },
                    "pedersen_ptr": {
                        "offset": 1,
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*"
                    },
                    "bitwise_ptr": {
                        "offset": 2,
                        "cairo_type": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin*"
                    },
                    "range_check_ptr": {
                        "offset": 3,
                        "cairo_type": "felt"
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "__main__._shape.Return": {
                "cairo_type": "(shape_len: felt, shape: contracts.types.ShapeItem*, nfts_len: felt, nfts: felt*)",
                "type": "type_definition"
            },
            "__main__._shape.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "__main__.get_local_index_": {
                "decorators": [
                    "view"
                ],
                "pc": 662,
                "type": "function"
            },
            "__main__.get_local_index_.Args": {
                "full_name": "__main__.get_local_index_.Args",
                "members": {
                    "global_index": {
                        "offset": 0,
                        "cairo_type": "felt"
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "__main__.get_local_index_.ImplicitArgs": {
                "full_name": "__main__.get_local_index_.ImplicitArgs",
                "members": {
                    "syscall_ptr": {
                        "offset": 0,
                        "cairo_type": "felt*"
                    },
                    "pedersen_ptr": {
                        "offset": 1,
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*"
                    },
                    "bitwise_ptr": {
                        "offset": 2,
                        "cairo_type": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin*"
                    },
                    "range_check_ptr": {
                        "offset": 3,
                        "cairo_type": "felt"
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "__main__.get_local_index_.Return": {
                "cairo_type": "(res: felt)",
                "type": "type_definition"
            },
            "__main__.get_local_index_.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "__main__._get_local_index": {
                "decorators": [],
                "pc": 702,
                "type": "function"
            },
            "__main__._get_local_index.Args": {
                "full_name": "__main__._get_local_index.Args",
                "members": {
                    "global_index": {
                        "offset": 0,
                        "cairo_type": "felt"
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "__main__._get_local_index.ImplicitArgs": {
                "full_name": "__main__._get_local_index.ImplicitArgs",
                "members": {
                    "syscall_ptr": {
                        "offset": 0,
                        "cairo_type": "felt*"
                    },
                    "pedersen_ptr": {
                        "offset": 1,
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*"
                    },
                    "bitwise_ptr": {
                        "offset": 2,
                        "cairo_type": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin*"
                    },
                    "range_check_ptr": {
                        "offset": 3,
                        "cairo_type": "felt"
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "__main__._get_local_index.Return": {
                "cairo_type": "felt",
                "type": "type_definition"
            },
            "__main__._get_local_index.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "__main__.shape_": {
                "decorators": [
                    "view"
                ],
                "pc": 713,
                "type": "function"
            },
            "__main__.shape_.Args": {
                "full_name": "__main__.shape_.Args",
                "members": {
                    "global_index": {
                        "offset": 0,
                        "cairo_type": "felt"
                    }
                },
                "size": 1,
                "type": "struct"
            },
            "__main__.shape_.ImplicitArgs": {
                "full_name": "__main__.shape_.ImplicitArgs",
                "members": {
                    "syscall_ptr": {
                        "offset": 0,
                        "cairo_type": "felt*"
                    },
                    "pedersen_ptr": {
                        "offset": 1,
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*"
                    },
                    "bitwise_ptr": {
                        "offset": 2,
                        "cairo_type": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin*"
                    },
                    "range_check_ptr": {
                        "offset": 3,
                        "cairo_type": "felt"
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "__main__.shape_.Return": {
                "cairo_type": "(shape_len: felt, shape: contracts.types.ShapeItem*, nfts_len: felt, nfts: felt*)",
                "type": "type_definition"
            },
            "__main__.shape_.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "__main__.compute_shape_hash": {
                "decorators": [],
                "pc": 783,
                "type": "function"
            },
            "__main__.compute_shape_hash.Args": {
                "full_name": "__main__.compute_shape_hash.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__main__.compute_shape_hash.ImplicitArgs": {
                "full_name": "__main__.compute_shape_hash.ImplicitArgs",
                "members": {
                    "syscall_ptr": {
                        "offset": 0,
                        "cairo_type": "felt*"
                    },
                    "pedersen_ptr": {
                        "offset": 1,
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*"
                    },
                    "bitwise_ptr": {
                        "offset": 2,
                        "cairo_type": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin*"
                    },
                    "range_check_ptr": {
                        "offset": 3,
                        "cairo_type": "felt"
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "__main__.compute_shape_hash.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__.compute_shape_hash.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "__main__._find_nft": {
                "decorators": [],
                "pc": 788,
                "type": "function"
            },
            "__main__._find_nft.Args": {
                "full_name": "__main__._find_nft.Args",
                "members": {
                    "x_y_z": {
                        "offset": 0,
                        "cairo_type": "felt"
                    },
                    "current_item": {
                        "offset": 1,
                        "cairo_type": "contracts.types.ShapeItem*"
                    },
                    "nft_ptr": {
                        "offset": 2,
                        "cairo_type": "felt*"
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__._find_nft.ImplicitArgs": {
                "full_name": "__main__._find_nft.ImplicitArgs",
                "members": {
                    "syscall_ptr": {
                        "offset": 0,
                        "cairo_type": "felt*"
                    },
                    "pedersen_ptr": {
                        "offset": 1,
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*"
                    },
                    "bitwise_ptr": {
                        "offset": 2,
                        "cairo_type": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin*"
                    },
                    "range_check_ptr": {
                        "offset": 3,
                        "cairo_type": "felt"
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "__main__._find_nft.Return": {
                "cairo_type": "(token_id: felt)",
                "type": "type_definition"
            },
            "__main__._find_nft.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "__main__.decompress_data": {
                "decorators": [
                    "view"
                ],
                "pc": 831,
                "type": "function"
            },
            "__main__.decompress_data.Args": {
                "full_name": "__main__.decompress_data.Args",
                "members": {
                    "data": {
                        "offset": 0,
                        "cairo_type": "contracts.types.ShapeItem"
                    },
                    "local_index": {
                        "offset": 2,
                        "cairo_type": "felt"
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__.decompress_data.ImplicitArgs": {
                "full_name": "__main__.decompress_data.ImplicitArgs",
                "members": {
                    "syscall_ptr": {
                        "offset": 0,
                        "cairo_type": "felt*"
                    },
                    "pedersen_ptr": {
                        "offset": 1,
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*"
                    },
                    "bitwise_ptr": {
                        "offset": 2,
                        "cairo_type": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin*"
                    },
                    "range_check_ptr": {
                        "offset": 3,
                        "cairo_type": "felt"
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "__main__.decompress_data.Return": {
                "cairo_type": "(data: __main__.UncompressedShapeItem)",
                "type": "type_definition"
            },
            "__main__.decompress_data.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "__main__.check_shape_numbers_": {
                "decorators": [
                    "view"
                ],
                "pc": 1012,
                "type": "function"
            },
            "__main__.check_shape_numbers_.Args": {
                "full_name": "__main__.check_shape_numbers_.Args",
                "members": {
                    "global_index": {
                        "offset": 0,
                        "cairo_type": "felt"
                    },
                    "shape_len": {
                        "offset": 1,
                        "cairo_type": "felt"
                    },
                    "shape": {
                        "offset": 2,
                        "cairo_type": "contracts.types.ShapeItem*"
                    },
                    "fts_len": {
                        "offset": 3,
                        "cairo_type": "felt"
                    },
                    "fts": {
                        "offset": 4,
                        "cairo_type": "contracts.types.FTSpec*"
                    },
                    "nfts_len": {
                        "offset": 5,
                        "cairo_type": "felt"
                    },
                    "nfts": {
                        "offset": 6,
                        "cairo_type": "felt*"
                    }
                },
                "size": 7,
                "type": "struct"
            },
            "__main__.check_shape_numbers_.ImplicitArgs": {
                "full_name": "__main__.check_shape_numbers_.ImplicitArgs",
                "members": {
                    "syscall_ptr": {
                        "offset": 0,
                        "cairo_type": "felt*"
                    },
                    "pedersen_ptr": {
                        "offset": 1,
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*"
                    },
                    "bitwise_ptr": {
                        "offset": 2,
                        "cairo_type": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin*"
                    },
                    "range_check_ptr": {
                        "offset": 3,
                        "cairo_type": "felt"
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "__main__.check_shape_numbers_.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__.check_shape_numbers_.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "__main__._initialize_qty": {
                "decorators": [],
                "pc": 1133,
                "type": "function"
            },
            "__main__._initialize_qty.Args": {
                "full_name": "__main__._initialize_qty.Args",
                "members": {
                    "fts_len": {
                        "offset": 0,
                        "cairo_type": "felt"
                    },
                    "fts": {
                        "offset": 1,
                        "cairo_type": "contracts.types.FTSpec*"
                    },
                    "qty": {
                        "offset": 2,
                        "cairo_type": "felt*"
                    }
                },
                "size": 3,
                "type": "struct"
            },
            "__main__._initialize_qty.ImplicitArgs": {
                "full_name": "__main__._initialize_qty.ImplicitArgs",
                "members": {
                    "syscall_ptr": {
                        "offset": 0,
                        "cairo_type": "felt*"
                    },
                    "pedersen_ptr": {
                        "offset": 1,
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*"
                    },
                    "bitwise_ptr": {
                        "offset": 2,
                        "cairo_type": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin*"
                    },
                    "range_check_ptr": {
                        "offset": 3,
                        "cairo_type": "felt"
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "__main__._initialize_qty.Return": {
                "cairo_type": "(qty_end: felt*)",
                "type": "type_definition"
            },
            "__main__._initialize_qty.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "__main__._check_qty_are_correct": {
                "decorators": [],
                "pc": 1156,
                "type": "function"
            },
            "__main__._check_qty_are_correct.Args": {
                "full_name": "__main__._check_qty_are_correct.Args",
                "members": {
                    "fts_len": {
                        "offset": 0,
                        "cairo_type": "felt"
                    },
                    "qty": {
                        "offset": 1,
                        "cairo_type": "felt*"
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__main__._check_qty_are_correct.ImplicitArgs": {
                "full_name": "__main__._check_qty_are_correct.ImplicitArgs",
                "members": {
                    "syscall_ptr": {
                        "offset": 0,
                        "cairo_type": "felt*"
                    },
                    "pedersen_ptr": {
                        "offset": 1,
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*"
                    },
                    "bitwise_ptr": {
                        "offset": 2,
                        "cairo_type": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin*"
                    },
                    "range_check_ptr": {
                        "offset": 3,
                        "cairo_type": "felt"
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "__main__._check_qty_are_correct.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__._check_qty_are_correct.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "__main__._check_shape_numbers_impl_": {
                "decorators": [],
                "pc": 1177,
                "type": "function"
            },
            "__main__._check_shape_numbers_impl_.Args": {
                "full_name": "__main__._check_shape_numbers_impl_.Args",
                "members": {
                    "stored_shape": {
                        "offset": 0,
                        "cairo_type": "contracts.types.ShapeItem*"
                    },
                    "stored_nfts": {
                        "offset": 1,
                        "cairo_type": "felt*"
                    },
                    "shape_len": {
                        "offset": 2,
                        "cairo_type": "felt"
                    },
                    "shape": {
                        "offset": 3,
                        "cairo_type": "contracts.types.ShapeItem*"
                    },
                    "fts_len": {
                        "offset": 4,
                        "cairo_type": "felt"
                    },
                    "fts": {
                        "offset": 5,
                        "cairo_type": "contracts.types.FTSpec*"
                    },
                    "qty": {
                        "offset": 6,
                        "cairo_type": "felt*"
                    },
                    "nfts_len": {
                        "offset": 7,
                        "cairo_type": "felt"
                    },
                    "nfts": {
                        "offset": 8,
                        "cairo_type": "felt*"
                    }
                },
                "size": 9,
                "type": "struct"
            },
            "__main__._check_shape_numbers_impl_.ImplicitArgs": {
                "full_name": "__main__._check_shape_numbers_impl_.ImplicitArgs",
                "members": {
                    "syscall_ptr": {
                        "offset": 0,
                        "cairo_type": "felt*"
                    },
                    "pedersen_ptr": {
                        "offset": 1,
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*"
                    },
                    "bitwise_ptr": {
                        "offset": 2,
                        "cairo_type": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin*"
                    },
                    "range_check_ptr": {
                        "offset": 3,
                        "cairo_type": "felt"
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "__main__._check_shape_numbers_impl_.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__._check_shape_numbers_impl_.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "__main__._decrement_ft_qty": {
                "decorators": [],
                "pc": 1284,
                "type": "function"
            },
            "__main__._decrement_ft_qty.Args": {
                "full_name": "__main__._decrement_ft_qty.Args",
                "members": {
                    "fts_len": {
                        "offset": 0,
                        "cairo_type": "felt"
                    },
                    "fts": {
                        "offset": 1,
                        "cairo_type": "contracts.types.FTSpec*"
                    },
                    "qty": {
                        "offset": 2,
                        "cairo_type": "felt*"
                    },
                    "material": {
                        "offset": 3,
                        "cairo_type": "felt"
                    },
                    "remaining_ft_to_parse": {
                        "offset": 4,
                        "cairo_type": "felt"
                    }
                },
                "size": 5,
                "type": "struct"
            },
            "__main__._decrement_ft_qty.ImplicitArgs": {
                "full_name": "__main__._decrement_ft_qty.ImplicitArgs",
                "members": {
                    "syscall_ptr": {
                        "offset": 0,
                        "cairo_type": "felt*"
                    },
                    "pedersen_ptr": {
                        "offset": 1,
                        "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*"
                    },
                    "bitwise_ptr": {
                        "offset": 2,
                        "cairo_type": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin*"
                    },
                    "range_check_ptr": {
                        "offset": 3,
                        "cairo_type": "felt"
                    }
                },
                "size": 4,
                "type": "struct"
            },
            "__main__._decrement_ft_qty.Return": {
                "cairo_type": "()",
                "type": "type_definition"
            },
            "__main__._decrement_ft_qty.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "__wrappers__._check_properly_sorted.__wrapped_func": {
                "destination": "contracts.shape.construction_guards._check_properly_sorted",
                "type": "alias"
            },
            "__wrappers__._check_properly_sorted_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__._check_properly_sorted": {
                "decorators": [
                    "view"
                ],
                "pc": 128,
                "type": "function"
            },
            "__wrappers__._check_properly_sorted.Args": {
                "full_name": "__wrappers__._check_properly_sorted.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__._check_properly_sorted.ImplicitArgs": {
                "full_name": "__wrappers__._check_properly_sorted.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__._check_properly_sorted.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: starkware.cairo.common.cairo_builtins.BitwiseBuiltin*, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__._check_properly_sorted.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "__wrappers__._check_for_duplicates.__wrapped_func": {
                "destination": "contracts.shape.construction_guards._check_for_duplicates",
                "type": "alias"
            },
            "__wrappers__._check_for_duplicates_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__._check_for_duplicates": {
                "decorators": [
                    "view"
                ],
                "pc": 209,
                "type": "function"
            },
            "__wrappers__._check_for_duplicates.Args": {
                "full_name": "__wrappers__._check_for_duplicates.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__._check_for_duplicates.ImplicitArgs": {
                "full_name": "__wrappers__._check_for_duplicates.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__._check_for_duplicates.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: starkware.cairo.common.cairo_builtins.BitwiseBuiltin*, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__._check_for_duplicates.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "__wrappers__._check_nfts_ok.__wrapped_func": {
                "destination": "contracts.shape.construction_guards._check_nfts_ok",
                "type": "alias"
            },
            "__wrappers__._check_nfts_ok_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__._check_nfts_ok": {
                "decorators": [
                    "view"
                ],
                "pc": 396,
                "type": "function"
            },
            "__wrappers__._check_nfts_ok.Args": {
                "full_name": "__wrappers__._check_nfts_ok.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__._check_nfts_ok.ImplicitArgs": {
                "full_name": "__wrappers__._check_nfts_ok.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__._check_nfts_ok.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: starkware.cairo.common.cairo_builtins.BitwiseBuiltin*, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__._check_nfts_ok.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "__wrappers__.constructor.__wrapped_func": {
                "destination": "__main__.constructor",
                "type": "alias"
            },
            "__wrappers__.constructor_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.constructor": {
                "decorators": [
                    "constructor"
                ],
                "pc": 574,
                "type": "function"
            },
            "__wrappers__.constructor.Args": {
                "full_name": "__wrappers__.constructor.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.constructor.ImplicitArgs": {
                "full_name": "__wrappers__.constructor.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.constructor.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: starkware.cairo.common.cairo_builtins.BitwiseBuiltin*, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.constructor.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "__wrappers__.get_local_index_.__wrapped_func": {
                "destination": "__main__.get_local_index_",
                "type": "alias"
            },
            "__wrappers__.get_local_index__encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.get_local_index__encode_return": {
                "decorators": [],
                "pc": 673,
                "type": "function"
            },
            "__wrappers__.get_local_index__encode_return.Args": {
                "full_name": "__wrappers__.get_local_index__encode_return.Args",
                "members": {
                    "ret_value": {
                        "offset": 0,
                        "cairo_type": "(res: felt)"
                    },
                    "range_check_ptr": {
                        "offset": 1,
                        "cairo_type": "felt"
                    }
                },
                "size": 2,
                "type": "struct"
            },
            "__wrappers__.get_local_index__encode_return.ImplicitArgs": {
                "full_name": "__wrappers__.get_local_index__encode_return.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.get_local_index__encode_return.Return": {
                "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.get_local_index__encode_return.SIZEOF_LOCALS": {
                "value": 1,
                "type": "const"
            },
            "__wrappers__.get_local_index_": {
                "decorators": [
                    "view"
                ],
                "pc": 682,
                "type": "function"
            },
            "__wrappers__.get_local_index_.Args": {
                "full_name": "__wrappers__.get_local_index_.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.get_local_index_.ImplicitArgs": {
                "full_name": "__wrappers__.get_local_index_.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.get_local_index_.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: starkware.cairo.common.cairo_builtins.BitwiseBuiltin*, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.get_local_index_.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "__wrappers__.shape_.__wrapped_func": {
                "destination": "__main__.shape_",
                "type": "alias"
            },
            "__wrappers__.shape__encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.shape__encode_return": {
                "decorators": [],
                "pc": 723,
                "type": "function"
            },
            "__wrappers__.shape__encode_return.Args": {
                "full_name": "__wrappers__.shape__encode_return.Args",
                "members": {
                    "ret_value": {
                        "offset": 0,
                        "cairo_type": "(shape_len: felt, shape: contracts.types.ShapeItem*, nfts_len: felt, nfts: felt*)"
                    },
                    "range_check_ptr": {
                        "offset": 4,
                        "cairo_type": "felt"
                    }
                },
                "size": 5,
                "type": "struct"
            },
            "__wrappers__.shape__encode_return.ImplicitArgs": {
                "full_name": "__wrappers__.shape__encode_return.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.shape__encode_return.Return": {
                "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.shape__encode_return.SIZEOF_LOCALS": {
                "value": 5,
                "type": "const"
            },
            "__wrappers__.shape_": {
                "decorators": [
                    "view"
                ],
                "pc": 758,
                "type": "function"
            },
            "__wrappers__.shape_.Args": {
                "full_name": "__wrappers__.shape_.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.shape_.ImplicitArgs": {
                "full_name": "__wrappers__.shape_.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.shape_.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: starkware.cairo.common.cairo_builtins.BitwiseBuiltin*, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.shape_.SIZEOF_LOCALS": {
                "value": 3,
                "type": "const"
            },
            "__wrappers__.decompress_data.__wrapped_func": {
                "destination": "__main__.decompress_data",
                "type": "alias"
            },
            "__wrappers__.decompress_data_encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.decompress_data_encode_return": {
                "decorators": [],
                "pc": 976,
                "type": "function"
            },
            "__wrappers__.decompress_data_encode_return.Args": {
                "full_name": "__wrappers__.decompress_data_encode_return.Args",
                "members": {
                    "ret_value": {
                        "offset": 0,
                        "cairo_type": "(data: __main__.UncompressedShapeItem)"
                    },
                    "range_check_ptr": {
                        "offset": 6,
                        "cairo_type": "felt"
                    }
                },
                "size": 7,
                "type": "struct"
            },
            "__wrappers__.decompress_data_encode_return.ImplicitArgs": {
                "full_name": "__wrappers__.decompress_data_encode_return.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.decompress_data_encode_return.Return": {
                "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.decompress_data_encode_return.SIZEOF_LOCALS": {
                "value": 1,
                "type": "const"
            },
            "__wrappers__.decompress_data": {
                "decorators": [
                    "view"
                ],
                "pc": 990,
                "type": "function"
            },
            "__wrappers__.decompress_data.Args": {
                "full_name": "__wrappers__.decompress_data.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.decompress_data.ImplicitArgs": {
                "full_name": "__wrappers__.decompress_data.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.decompress_data.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: starkware.cairo.common.cairo_builtins.BitwiseBuiltin*, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.decompress_data.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            },
            "__wrappers__.check_shape_numbers_.__wrapped_func": {
                "destination": "__main__.check_shape_numbers_",
                "type": "alias"
            },
            "__wrappers__.check_shape_numbers__encode_return.memcpy": {
                "destination": "starkware.cairo.common.memcpy.memcpy",
                "type": "alias"
            },
            "__wrappers__.check_shape_numbers_": {
                "decorators": [
                    "view"
                ],
                "pc": 1079,
                "type": "function"
            },
            "__wrappers__.check_shape_numbers_.Args": {
                "full_name": "__wrappers__.check_shape_numbers_.Args",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.check_shape_numbers_.ImplicitArgs": {
                "full_name": "__wrappers__.check_shape_numbers_.ImplicitArgs",
                "members": {},
                "size": 0,
                "type": "struct"
            },
            "__wrappers__.check_shape_numbers_.Return": {
                "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, bitwise_ptr: starkware.cairo.common.cairo_builtins.BitwiseBuiltin*, size: felt, retdata: felt*)",
                "type": "type_definition"
            },
            "__wrappers__.check_shape_numbers_.SIZEOF_LOCALS": {
                "value": 0,
                "type": "const"
            }
        },
        "prime": "0x800000000000011000000000000000000000000000000000000000000000001",
        "compiler_version": "0.10.3",
        "builtins": [
            "pedersen",
            "range_check",
            "bitwise"
        ]
    },
    "entry_points_by_type": {
        "EXTERNAL": [
            {
                "offset": "0x2f6",
                "selector": "0x222cde1c893f24fb4bf6beb830c54e83e32650f5a9cd0f56fa025872c60bdb"
            },
            {
                "offset": "0x2aa",
                "selector": "0xf2f9a15cce1138e4662a6b19766daa149d92fbd132129eb8c6eca89342f1cc"
            },
            {
                "offset": "0xd1",
                "selector": "0x17c87e93a46af58ee4925fef032a3b895cc0753bc73103ffe06c0a36ad24643"
            },
            {
                "offset": "0x437",
                "selector": "0x2265e9cb4d0ca5983c569b39e7a1a523d6ea342207bb700f558a588f6922f38"
            },
            {
                "offset": "0x80",
                "selector": "0x252a680fd5c4d1d8bb0ac1fcd579a4f1278b01e7163b2d8fb21f309c6b4588a"
            },
            {
                "offset": "0x3de",
                "selector": "0x36a11a8f2996c62518d0ed7e540cf0e445da69073c946f36b290ccc85ece26c"
            },
            {
                "offset": "0x18c",
                "selector": "0x38c2e003590ee855bf118f953919e88525efe71c13b7f158e3bf0fd8d1bfbcc"
            }
        ],
        "L1_HANDLER": [],
        "CONSTRUCTOR": [
            {
                "offset": "0x23e",
                "selector": "0x28ffe4ff0f226a9107253e17a904099aa4f63a02a5621de0576e5aa71bc5194"
            }
        ]
    }
}